loadstring(game:HttpGet('https://raw.githubusercontent.com/Pro666Pro/BypassAntiCheat/main/main.lua'))()

qx = 53221846120321
fd = 41274215912421
kv = 90217451058712
qt = 15821521732452
cb = 24481240959418

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v86 = v2(v0(v30, 16));
			if v19 then
				local v111 = v5(v86, v19);
				v19 = nil;
				return v111;
			else
				return v86;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v87 = 0 - (877 - (282 + 595));
			local v88;
			while true do
				if (v87 == (0 - (1637 - (1523 + 114)))) then
					v88 = (v31 / ((2 + 0) ^ (v32 - (1 - 0)))) % ((4 - (2 - 0)) ^ (((v33 - (620 - (555 + 64))) - (v32 - (932 - (857 + 74)))) + (569 - (367 + 201))));
					return v88 - (v88 % 1);
				end
			end
		else
			local v89 = (929 - (214 + (1778 - (68 + 997)))) ^ (v32 - (1 + 0));
			return (((v31 % (v89 + v89)) >= v89) and 1) or (0 + 0);
		end
	end
	local function v21()
		local v34 = 0;
		local v35;
		while true do
			if (v34 == (1271 - (226 + 232 + 812))) then
				return v35;
			end
			if (v34 == (0 - 0)) then
				v35 = v1(v16, v18, v18);
				v18 = v18 + (118 - (32 + 85));
				v34 = 1 + 0;
			end
		end
	end
	local function v22()
		local v36, v37 = v1(v16, v18, v18 + (959 - (892 + 65)));
		v18 = v18 + (4 - 2);
		return (v37 * (472 - 216)) + v36;
	end
	local function v23()
		local v38, v39, v40, v41 = v1(v16, v18, v18 + 3 + 0);
		v18 = v18 + (7 - 3);
		return (v41 * 16777216) + (v40 * (65886 - (87 + 263))) + (v39 * (436 - (67 + 113))) + v38;
	end
	local function v24()
		local v42 = v23();
		local v43 = v23();
		local v44 = 2 - 1;
		local v45 = (v20(v43, 1 + 0, 20) * ((7 - 5) ^ (984 - (802 + 150)))) + v42;
		local v46 = v20(v43, 56 - (826 - (368 + 423)), (172 - 117) - 24);
		local v47 = ((v20(v43, 32) == (1 + 0)) and -1) or ((1016 - (10 + 8)) - (915 + (315 - 233)));
		if (v46 == 0) then
			if (v45 == (0 - (442 - (416 + 26)))) then
				return v47 * 0;
			else
				v46 = 1 + 0;
				v44 = 0 - 0;
			end
		elseif (v46 == (3234 - (1069 + 118))) then
			return ((v45 == (0 - (0 - 0))) and (v47 * (1 / (0 - 0)))) or (v47 * NaN);
		end
		return v8(v47, v46 - (178 + 845)) * (v44 + (v45 / (((2 + 1) - 1) ^ (52 + 0))));
	end
	local function v25(v48)
		local v49;
		if not v48 then
			local v90 = 0 - 0;
			while true do
				if (v90 == ((359 + 79) - (145 + 293))) then
					v48 = v23();
					if (v48 == (430 - (44 + 386))) then
						return "";
					end
					break;
				end
			end
		end
		v49 = v3(v16, v18, (v18 + v48) - ((2259 - (201 + 571)) - (998 + 488)));
		v18 = v18 + v48;
		local v50 = {};
		for v66 = 1 + 0, #v49 do
			v50[v66] = v2(v1(v3(v49, v66, v66)));
		end
		return v6(v50);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v51 = (function()
			return function(v91, v92, v93, v94, v95, v96, v97, v98)
				local v91 = (function()
					return 1665 - (970 + 695);
				end)();
				local v92 = (function()
					return;
				end)();
				local v94 = (function()
					return;
				end)();
				while true do
					if (v91 == 0) then
						local v116 = (function()
							return 0 + 0;
						end)();
						while true do
							if (v116 == (1 - 0)) then
								v91 = (function()
									return #"!";
								end)();
								break;
							end
							if (v116 == 0) then
								v92 = (function()
									return v93();
								end)();
								v94 = (function()
									return nil;
								end)();
								v116 = (function()
									return 1263 - (1091 + 171);
								end)();
							end
						end
					end
					if (v91 == #">") then
						if (v92 == #":") then
							v94 = (function()
								return v93() ~= (0 + 0);
							end)();
						elseif (v92 == 2) then
							v94 = (function()
								return v95();
							end)();
						elseif (v92 ~= #"91(") then
						else
							v94 = (function()
								return v96();
							end)();
						end
						v97[v98] = (function()
							return v94;
						end)();
						break;
					end
				end
				return v91, v92, v93, v94, v95, v96, v97, v98;
			end;
		end)();
		local v52 = (function()
			return function(v99, v100, v101)
				local v102 = (function()
					return 0 - 0;
				end)();
				local v103 = (function()
					return;
				end)();
				while true do
					if (v102 ~= (0 - 0)) then
					else
						v103 = (function()
							return 0 - 0;
						end)();
						while true do
							if (v103 == (374 - (123 + 251))) then
								local v121 = (function()
									return 0 - 0;
								end)();
								while true do
									if ((0 - 0) == v121) then
										v99[v100 - #"}"] = (function()
											return v101();
										end)();
										return v99, v100, v101;
									end
								end
							end
						end
						break;
					end
				end
			end;
		end)();
		local v53 = (function()
			return {};
		end)();
		local v54 = (function()
			return {};
		end)();
		local v55 = (function()
			return {};
		end)();
		local v56 = (function()
			return {v53,v54,nil,v55};
		end)();
		local v57 = (function()
			return v23();
		end)();
		local v58 = (function()
			return {};
		end)();
		for v68 = #",", v57 do
			FlatIdent_12703, Type, v21, Cons, v24, v25, v58, v68 = (function()
				return v51(FlatIdent_12703, Type, v21, Cons, v24, v25, v58, v68);
			end)();
		end
		v56[#"91("] = (function()
			return v21();
		end)();
		for v69 = #"<", v23() do
			local v70 = (function()
				return v21();
			end)();
			if (v20(v70, #"~", #"}") == (1824 - (1195 + 629))) then
				local v106 = (function()
					return 0 + 0;
				end)();
				local v107 = (function()
					return;
				end)();
				local v108 = (function()
					return;
				end)();
				local v109 = (function()
					return;
				end)();
				local v110 = (function()
					return;
				end)();
				while true do
					if (v106 ~= 1) then
					else
						v109 = (function()
							return nil;
						end)();
						v110 = (function()
							return nil;
						end)();
						v106 = (function()
							return 2;
						end)();
					end
					if (v106 == 2) then
						while true do
							if (v107 == #"19(") then
								if (v20(v109, #"91(", #"asd") ~= #"{") then
								else
									v110[#".dev"] = (function()
										return v58[v110[#"?id="]];
									end)();
								end
								v53[v69] = (function()
									return v110;
								end)();
								break;
							end
							if (v107 == #"|") then
								local v123 = (function()
									return 0;
								end)();
								local v124 = (function()
									return;
								end)();
								while true do
									if (v123 == (0 + 0)) then
										v124 = (function()
											return 241 - (187 + 54);
										end)();
										while true do
											if ((780 - (162 + 618)) == v124) then
												v110 = (function()
													return {v22(),v22(),nil,nil};
												end)();
												if (v108 == (836 - (660 + 176))) then
													local v133 = (function()
														return 0;
													end)();
													while true do
														if (v133 == 0) then
															v110[#"91("] = (function()
																return v22();
															end)();
															v110[#"?id="] = (function()
																return v22();
															end)();
															break;
														end
													end
												elseif (v108 == #"|") then
													v110[#"xnx"] = (function()
														return v23();
													end)();
												elseif (v108 == (1 + 1)) then
													v110[#"91("] = (function()
														return v23() - ((204 - (14 + 188)) ^ (691 - (534 + 141)));
													end)();
												elseif (v108 ~= #"asd") then
												else
													local v1228 = (function()
														return 0 + 0;
													end)();
													local v1229 = (function()
														return;
													end)();
													while true do
														if (v1228 ~= (0 + 0)) then
														else
															v1229 = (function()
																return 0 + 0;
															end)();
															while true do
																if (v1229 == (0 + 0)) then
																	v110[#"xxx"] = (function()
																		return v23() - (2 ^ 16);
																	end)();
																	v110[#".dev"] = (function()
																		return v22();
																	end)();
																	break;
																end
															end
															break;
														end
													end
												end
												v124 = (function()
													return 1 - 0;
												end)();
											end
											if (v124 == (1 - 0)) then
												v107 = (function()
													return 1 + 1;
												end)();
												break;
											end
										end
										break;
									end
								end
							end
							if (v107 == (2 - 0)) then
								local v125 = (function()
									return 0;
								end)();
								while true do
									if (v125 == 1) then
										v107 = (function()
											return #"-19";
										end)();
										break;
									end
									if ((0 - 0) == v125) then
										if (v20(v109, #"}", #"~") == #".") then
											v110[2 + 0] = (function()
												return v58[v110[2 - 0]];
											end)();
										end
										if (v20(v109, 1386 - (746 + 638), 2 + 0) == #"~") then
											v110[#"asd"] = (function()
												return v58[v110[#"xnx"]];
											end)();
										end
										v125 = (function()
											return 397 - (115 + 281);
										end)();
									end
								end
							end
							if (v107 ~= 0) then
							else
								local v126 = (function()
									return 0;
								end)();
								local v127 = (function()
									return;
								end)();
								while true do
									if (v126 == (0 - 0)) then
										v127 = (function()
											return 0;
										end)();
										while true do
											if (v127 ~= (0 + 0)) then
											else
												v108 = (function()
													return v20(v70, 4 - 2, #"asd");
												end)();
												v109 = (function()
													return v20(v70, #"asd1", 21 - 15);
												end)();
												v127 = (function()
													return 1 + 0;
												end)();
											end
											if (v127 == (868 - (550 + 317))) then
												v107 = (function()
													return #",";
												end)();
												break;
											end
										end
										break;
									end
								end
							end
						end
						break;
					end
					if ((560 - (306 + 254)) == v106) then
						local v120 = (function()
							return 0 - 0;
						end)();
						while true do
							if (v120 == 0) then
								v107 = (function()
									return 0 - 0;
								end)();
								v108 = (function()
									return nil;
								end)();
								v120 = (function()
									return 2 - 1;
								end)();
							end
							if (v120 ~= (286 - (134 + 151))) then
							else
								v106 = (function()
									return 1;
								end)();
								break;
							end
						end
					end
				end
			end
		end
		for v71 = #"[", v23() do
			v54, v71, v28 = (function()
				return v52(v54, v71, v28);
			end)();
		end
		return v56;
	end
	local function v29(v60, v61, v62)
		local v63 = v60[1468 - (899 + 568)];
		local v64 = v60[2 + 0];
		local v65 = v60[(16 - 9) - 4];
		return function(...)
			local v72 = v63;
			local v73 = v64;
			local v74 = v65;
			local v75 = v27;
			local v76 = 604 - (268 + 335);
			local v77 = -(291 - (60 + 230));
			local v78 = {};
			local v79 = {...};
			local v80 = v12("#", ...) - (1 + 0);
			local v81 = {};
			local v82 = {};
			for v104 = 1456 - (282 + 1174), v80 do
				if ((2250 <= 4114) and ((v104 >= v74) or (2825 >= 4365))) then
					v78[v104 - v74] = v79[v104 + (812 - (569 + 242))];
				else
					v82[v104] = v79[v104 + (2 - 1)];
				end
			end
			local v83 = (v80 - v74) + 1;
			local v84;
			local v85;
			while true do
				local v105 = 0;
				while true do
					if (v105 == 0) then
						v84 = v72[v76];
						v85 = v84[1 + 0];
						v105 = 1025 - (706 + 318);
					end
					if (v105 == (1252 - (721 + 530))) then
						if (v85 <= 30) then
							if ((262 < 4193) and ((v85 <= (1285 - ((1954 - (615 + 394)) + 326))) or (1053 > 3604))) then
								if ((4882 >= 3904) and (v85 <= 6)) then
									if ((2960 > 856) and (v85 <= (4 - 2))) then
										if (v85 <= (0 + 0)) then
											local v132 = 700 - (271 + 429);
											while true do
												if ((1388 == 1388) and ((v132 == (5 + 0)) or (1599 == 3736))) then
													v84 = v72[v76];
													v82[v84[2]] = v82[v84[1503 - (1408 + 92)]][v84[1090 - (461 + 625)]];
													v76 = v76 + (1289 - (993 + 295));
													v84 = v72[v76];
													v132 = 1 + 5;
												end
												if ((3933 > 416) and (v132 == (1171 - (418 + 753)))) then
													v82[v84[1 + 1]] = {};
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v82[v84[1 + 1]] = v82[v84[3]][v84[2 + 2]];
													v132 = 1;
												end
												if (v132 == (532 - (406 + 123))) then
													v82[v84[1771 - (1749 + 20)]] = v82[v84[1 + 2]][v84[1326 - (1249 + 73)]];
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v82[v84[1147 - (466 + 613 + 66)]] = v82[v84[3 + 0]][v84[9 - 5]];
													v132 = 11 - 7;
												end
												if ((v132 == (1902 - (106 + 1794))) or (2991 > 4434)) then
													v84 = v72[v76];
													v82[v84[1 + 1]][v82[v84[3]]] = v82[v84[4]];
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v132 = 8 - 5;
												end
												if ((v132 == (10 - (18 - 12))) or (252 > 759)) then
													v76 = v76 + (115 - (4 + 110));
													v84 = v72[v76];
													v82[v84[586 - ((258 - 201) + 527)]][v82[v84[1430 - (41 + 1386)]]] = v82[v84[107 - (17 + (737 - (59 + 592)))]];
													v76 = v76 + 1 + 0;
													v132 = 11 - (13 - 7);
												end
												if ((2 - 1) == v132) then
													v76 = v76 + (167 - (122 + 44));
													v84 = v72[v76];
													v82[v84[2 - 0]] = v82[v84[9 - 6]][v84[7 - 3]];
													v76 = v76 + 1 + 0;
													v132 = 1 + 1;
												end
												if ((745 <= 2549) and (v132 == (11 - 5))) then
													v82[v84[67 - (30 + 35)]][v82[v84[3 + 0]]] = v84[1261 - (1043 + 214)];
													v76 = v76 + (3 - 2);
													v84 = v72[v76];
													v82[v84[2]] = v82[v84[1215 - (323 + 889)]][v84[10 - 6]];
													break;
												end
											end
										elseif (v85 == (581 - (361 + 219))) then
											local v134 = 320 - (53 + 267);
											local v135;
											local v136;
											local v137;
											local v138;
											local v139;
											while true do
												if (v134 == 9) then
													v84 = v72[v76];
													v82[v84[1 + 1]][v82[v84[(294 + 122) - (15 + 398)]]] = v82[v84[986 - (18 + 964)]];
													v76 = v76 + ((174 - (70 + 101)) - 2);
													v84 = v72[v76];
													v82[v84[2 + 0]] = v61[v84[2 + 1]];
													v76 = v76 + (851 - ((49 - 29) + 830));
													v84 = v72[v76];
													v82[v84[2 + 0]] = v82[v84[129 - (116 + 10)]][v84[4]];
													v76 = v76 + 1;
													v134 = 1 + 9;
												end
												if (v134 == ((528 + 216) - (542 + 196))) then
													v84 = v72[v76];
													v82[v84[4 - 2]] = v61[v84[6 - 3]];
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v82[v84[2 + 0]] = v82[v84[3]][v84[(243 - (123 + 118)) + 2]];
													v76 = v76 + (2 - (1 + 0));
													v84 = v72[v76];
													v82[v84[2]] = v61[v84[3]];
													v76 = v76 + (2 - 1);
													v134 = 1558 - (1126 + 425);
												end
												if ((413 - (118 + 287)) == v134) then
													v84 = v72[v76];
													v82[v84[2]] = v82[v84[11 - 8]][v84[4]];
													v76 = v76 + (1122 - (118 + 1003));
													v84 = v72[v76];
													v82[v84[5 - 3]] = v61[v84[380 - (142 + 3 + 232)]];
													v76 = v76 + ((1403 - (653 + 746)) - 3);
													v84 = v72[v76];
													v82[v84[(1 - 0) + (1 - 0)]] = v82[v84[3]][v84[4]];
													v76 = v76 + (978 - (553 + 424));
													v134 = 16 - 7;
												end
												if ((v134 == (11 + 1)) or (1676 == 1704)) then
													v84 = v72[v76];
													v82[v84[2]] = v61[v84[(7 - 4) + 0]];
													v76 = v76 + 1 + 0 + 0;
													v84 = v72[v76];
													v82[v84[1 + 1]] = v82[v84[2 + 0 + 1]][v84[8 - 4]];
													v76 = v76 + (2 - 1);
													v84 = v72[v76];
													v82[v84[4 - 2]][v82[v84[3]]] = v82[v84[2 + 2 + 0]];
													v76 = v76 + 1;
													v134 = 62 - 49;
												end
												if (v134 == (754 - (239 + 514))) then
													v84 = v72[v76];
													v139 = v84[1 + 1];
													v137, v138 = v75(v82[v139](v82[v139 + (1330 - (797 + 66 + 466))]));
													v77 = (v138 + v139) - (1 + 0);
													v136 = 0 + 0 + 0;
													for v1193 = v139, v77 do
														local v1194 = 0 - 0;
														while true do
															if ((2746 <= 4845) and (1145 <= 2799) and ((1202 - (373 + 829)) == v1194)) then
																v136 = v136 + (732 - (476 + 255));
																v82[v1193] = v137[v136];
																break;
															end
														end
													end
													v76 = v76 + (1131 - (369 + 761));
													v84 = v72[v76];
													v139 = v84[(4 - 2) + 0];
													v134 = 2;
												end
												if (v134 == (0 - 0)) then
													v135 = nil;
													v136 = nil;
													v137, v138 = nil;
													v139 = nil;
													v82[v84[3 - 1]] = v62[v84[241 - (64 + 174)]];
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v82[v84[(2 + 0) - 0]] = v84[339 - (144 + 192)];
													v76 = v76 + 1;
													v134 = 217 - (42 + 174);
												end
												if ((2391 < 2591) and (1913 == 1913) and (v134 == (4 + 1))) then
													v84 = v72[v76];
													v82[v84[2 + 0]] = v61[v84[4 - 1]];
													v76 = v76 + 1 + (1234 - (885 + 349));
													v84 = v72[v76];
													v82[v84[1506 - (363 + 1141)]] = v82[v84[(1258 + 325) - (1183 + 397)]][v84[4]];
													v76 = v76 + 1;
													v84 = v72[v76];
													v82[v84[5 - 3]] = {};
													v76 = v76 + 1 + 0;
													v134 = 6;
												end
												if ((v134 == (9 + 2)) or (1195 >= 1319)) then
													v84 = v72[v76];
													v82[v84[1977 - (1913 + 62)]][v82[v84[2 + 1]]] = v84[10 - (16 - 10)];
													v76 = v76 + (1934 - (565 + 1368));
													v84 = v72[v76];
													v82[v84[7 - 5]] = v61[v84[1664 - (1477 + 184)]];
													v76 = v76 + (1 - 0);
													v84 = v72[v76];
													v82[v84[2 + 0]] = v82[v84[859 - (564 + 292)]][v84[6 - 2]];
													v76 = v76 + (2 - (2 - 1));
													v134 = 12;
												end
												if (v134 == (308 - (244 + 60))) then
													v139 = v84[2 + (968 - (915 + 53))];
													v82[v139] = v82[v139](v13(v82, v139 + ((1278 - (768 + 33)) - (41 + 435)), v84[(3844 - 2840) - (938 + 63)]));
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v139 = v84[2];
													v135 = v82[v84[1128 - ((1647 - 711) + 189)]];
													v82[v139 + 1 + 0] = v135;
													v82[v139] = v135[v84[1617 - (1565 + 48)]];
													v76 = v76 + 1;
													v134 = 4 + 1;
												end
												if ((1148 - (782 + 356)) == v134) then
													v84 = v72[v76];
													v82[v84[2]][v82[v84[270 - (176 + 91)]]] = v84[10 - 6];
													v76 = v76 + (1 - 0);
													v84 = v72[v76];
													v82[v84[1094 - (975 + 117)]] = v61[v84[1878 - (157 + 1718)]];
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v82[v84[2]] = v82[v84[10 - 7]][v84[13 - 9]];
													v76 = v76 + (1019 - (697 + (649 - (287 + 41))));
													v134 = 29 - 18;
												end
												if (v134 == (3 - (848 - (638 + 209)))) then
													v82[v139](v13(v82, v139 + (2 - 1), v77));
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v82[v84[3 - 1]] = v62[v84[7 - (3 + 1)]];
													v76 = v76 + (1228 - (322 + 905));
													v84 = v72[v76];
													v139 = v84[613 - (602 + 9)];
													v135 = v82[v84[1192 - (449 + 740)]];
													v82[v139 + (873 - (826 + 46))] = v135;
													v134 = 3;
												end
												if ((v134 == (954 - (245 + 702))) or (2086 < 2040)) then
													v84 = v72[v76];
													v82[v84[2]] = v82[v84[9 - 6]][v84[4]];
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v82[v84[1900 - (260 + 1638)]][v82[v84[443 - (382 + 58)]]] = v82[v84[4]];
													v76 = v76 + (3 - 2);
													v84 = v72[v76];
													v82[v84[2 + 0]] = v61[v84[3]];
													v76 = v76 + (1 - 0);
													v134 = 23 - 15;
												end
												if ((v134 == (1689 - (96 + 1590))) or (510 == 4402)) then
													v82[v139] = v135[v84[1209 - (902 + 303)]];
													v76 = v76 + (1 - 0);
													v84 = v72[v76];
													v82[v84[4 - 2]] = v61[v84[1 + (1674 - (741 + 931))]];
													v76 = v76 + (1691 - (551 + 570 + 569));
													v84 = v72[v76];
													v82[v84[216 - (22 + 192)]] = v82[v84[686 - (483 + (569 - 369))]][v84[18 - 14]];
													v76 = v76 + (1464 - (1404 + 59));
													v84 = v72[v76];
													v134 = 10 - 6;
												end
												if (v134 == 13) then
													v84 = v72[v76];
													v139 = v84[2 - 0];
													v82[v139](v13(v82, v139 + ((329 + 437) - (468 + 297)), v84[3]));
													v76 = v76 + (563 - (144 + 190 + 228));
													v84 = v72[v76];
													v76 = v84[10 - 7];
													break;
												end
											end
										else
											v82[v84[4 - 2]] = v82[v84[5 - 2]][v84[2 + 2]];
										end
									elseif ((v85 <= (240 - (141 + 95))) or (1901 >= 3884)) then
										if (v85 > (3 + 0)) then
											v82[v84[2]][v82[v84[3]]] = v84[4];
										else
											for v887 = v84[4 - 2], v84[3] do
												v82[v887] = nil;
											end
										end
									elseif (v85 == 5) then
										v82[v84[4 - 2]]();
									else
										local v144;
										v82[v84[1 + 1 + 0]] = v82[v84[8 - 5]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[2 + 0]] = v84[4 - 1];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[(626 - 461) - (92 + 24 + 47)]] = v84[1 + 1 + 1];
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v144 = v84[767 - (574 + 191)];
										v82[v144] = v82[v144](v13(v82, v144 + 1, v84[3 + 0]));
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v82[v84[2 + 0]][v84[3]] = v82[v84[853 - (254 + 595)]];
										v76 = v76 + (127 - (55 + 71));
										v84 = v72[v76];
										v82[v84[2]] = v82[v84[3 - 0]];
										v76 = v76 + (1791 - (573 + 1217));
										v84 = v72[v76];
										v82[v84[5 - 3]] = v84[1 + 2];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[2 - 0]] = v84[942 - (714 + 225)];
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v144 = v84[2 - 0];
										v82[v144] = v82[v144](v13(v82, v144 + 1, v84[(4 - 3) + 2]));
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v82[v84[2]][v84[809 - (118 + 688)]] = v82[v84[52 - (25 + 23)]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[1888 - (927 + 959)]] = v82[v84[10 - 7]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[734 - (16 + 643 + 73)]] = v84[497 - (64 + 430)];
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v82[v84[(99 + 0) - (11 + 86)]] = v84[6 - 3];
										v76 = v76 + (286 - (175 + 110));
										v84 = v72[v76];
										v144 = v84[4 - 2];
										v82[v144] = v82[v144](v13(v82, v144 + (4 - 3), v84[1799 - (503 + (1656 - (106 + 257)))]));
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[5 - 3]][v84[3 + 0]] = v82[v84[1065 - (810 + 178 + 73)]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[1 + 1]] = v82[v84[3 + (721 - (496 + 225))]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[535 - (43 + 490)]] = v84[3];
										v76 = v76 + (734 - (711 + 22));
										v84 = v72[v76];
										v82[v84[3 - 1]] = v84[11 - 8];
										v76 = v76 + 1;
										v84 = v72[v76];
										v144 = v84[861 - (240 + 619)];
										v82[v144] = v82[v144](v13(v82, v144 + 1 + 0, v84[(19 - 15) - 1]));
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[1746 - (1344 + 400)]][v84[(2066 - (256 + 1402)) - ((2154 - (30 + 1869)) + 150)]] = v82[v84[4 + 0]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[2 + 0]] = v82[v84[12 - 9]];
										v76 = v76 + ((1372 - (213 + 1156)) - 2);
										v84 = v72[v76];
										v82[v84[2]] = v84[1742 - (404 + 1335)];
										v76 = v76 + ((595 - (96 + 92)) - (183 + 223));
										v84 = v72[v76];
										v82[v84[2 - (0 + 0)]] = v84[2 + 1];
										v76 = v76 + 1;
										v84 = v72[v76];
										v144 = v84[2];
										v82[v144] = v82[v144](v13(v82, v144 + 1 + 0, v84[3]));
										v76 = v76 + (338 - (10 + 327));
										v84 = v72[v76];
										v82[v84[2 + 0]][v84[341 - (118 + 220)]] = v82[v84[2 + 2]];
										v76 = v76 + (450 - (108 + 341));
										v84 = v72[v76];
										v82[v84[2]] = v82[v84[3]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[8 - 6]] = v84[1496 - (711 + 782)];
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v82[v84[2]] = v84[472 - (270 + 199)];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v144 = v84[2];
										v82[v144] = v82[v144](v13(v82, v144 + 1, v84[3]));
										v76 = v76 + (1820 - (580 + 1239));
										v84 = v72[v76];
										v82[v84[5 - 3]][v84[3 + 0]] = v82[v84[1 + 3]];
										v76 = v76 + (900 - (142 + 757)) + 0;
										v84 = v72[v76];
										v82[v84[4 - 2]] = v82[v84[2 + 1]];
										v76 = v76 + (1168 - (645 + 522));
										v84 = v72[v76];
										v82[v84[(1460 + 332) - (1010 + 780)]] = v84[3 + 0];
										v76 = v76 + (4 - 3);
										v84 = v72[v76];
										v82[v84[5 - 3]] = v84[3];
										v76 = v76 + (1837 - (1045 + 791));
										v84 = v72[v76];
										v144 = v84[2];
										v82[v144] = v82[v144](v13(v82, v144 + (2 - 1), v84[4 - 1]));
										v76 = v76 + (506 - (351 + 154));
										v84 = v72[v76];
										v82[v84[1576 - (1281 + 293)]][v84[269 - (28 + 238)]] = v82[v84[8 - 4]];
										v76 = v76 + (1560 - (565 + 816 + 178));
										v84 = v72[v76];
										v82[v84[(81 - (32 + 47)) + 0]] = v82[v84[3 + 0]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[2]] = v84[10 - 7];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[472 - (381 + 89)]] = v84[3 + 0];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v144 = v84[2 - 0];
										v82[v144] = v82[v144](v13(v82, v144 + (1157 - (1074 + 82)), v84[6 - 3]));
										v76 = v76 + (1785 - (214 + 1570));
										v84 = v72[v76];
										v82[v84[2]][v84[1458 - (990 + 465)]] = v82[v84[4]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[2]] = v82[v84[2 + 1]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[1 + 1]] = v84[3 + 0];
										v76 = v76 + (3 - 2);
										v84 = v72[v76];
										v82[v84[1728 - (1668 + 58)]] = v84[629 - (512 + 114)];
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v144 = v84[2];
										v82[v144] = v82[v144](v13(v82, v144 + (1 - 0), v84[10 - 7]));
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[1 + 1]][v84[3 + 0]] = v82[v84[13 - 9]];
										v76 = v76 + (1995 - (109 + 1885));
										v84 = v72[v76];
										v82[v84[(3448 - (1053 + 924)) - (1269 + 200)]] = v82[v84[5 - 2]];
										v76 = v76 + (816 - (98 + 717));
										v84 = v72[v76];
										v82[v84[828 - (802 + 24)]] = v84[5 - 2];
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v82[v84[2]] = v84[3];
										v76 = v76 + 1;
										v84 = v72[v76];
										v144 = v84[1 + 1];
										v82[v144] = v82[v144](v13(v82, v144 + 1 + 0, v84[3 + 0]));
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[1 + 1]][v84[(13 - 5) - 5]] = v82[v84[13 - 9]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[1 + (1649 - (685 + 963))]] = v82[v84[3 + 0]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[(1 - 0) + 1]] = v84[1436 - (797 + (991 - 355))];
										v76 = v76 + ((1713 - (541 + 1168)) - 3);
										v84 = v72[v76];
										v82[v84[(3218 - (645 + 952)) - (1427 + 192)]] = v84[3];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v144 = v84[4 - 2];
										v82[v144] = v82[v144](v13(v82, v144 + 1 + 0, v84[3]));
										v76 = v76 + (839 - (669 + 169)) + 0;
										v84 = v72[v76];
										v82[v84[328 - (192 + (464 - 330))]][v84[1279 - (316 + 960)]] = v82[v84[4]];
										v76 = v76 + 1 + (0 - 0);
										v84 = v72[v76];
										v82[v84[2 + 0]] = v82[v84[3 + 0]];
										v76 = v76 + (3 - 2);
										v84 = v72[v76];
										v82[v84[553 - (83 + 468)]] = v84[1809 - (1202 + 604)];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[9 - 7]] = v84[4 - 1];
										v76 = v76 + 1;
										v84 = v72[v76];
										v144 = v84[2];
										v82[v144] = v82[v144](v13(v82, v144 + (2 - 1), v84[328 - (45 + 280)]));
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[1 + 1 + 0]][v84[2 + 1 + 0]] = v82[v84[4]];
										v76 = v76 + (766 - (181 + 584)) + 0;
										v84 = v72[v76];
										v82[v84[1 + (1396 - (665 + 730))]] = v82[v84[5 - (5 - 3)]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[1913 - (340 + 1571)]] = v84[2 + (1 - 0)];
										v76 = v76 + (1773 - (1733 + 39));
										v84 = v72[v76];
										v82[v84[(1355 - (540 + 810)) - 3]] = v84[3];
										v76 = v76 + (1035 - (125 + 909));
										v84 = v72[v76];
										v144 = v84[1950 - (1096 + (3406 - 2554))];
										v82[v144] = v82[v144](v13(v82, v144 + 1, v84[2 + (2 - 1)]));
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v82[v84[2 + 0]][v84[3]] = v82[v84[516 - (409 + 82 + 21)]];
										v76 = v76 + (237 - (46 + 190));
										v84 = v72[v76];
										v82[v84[2]] = v82[v84[3]];
										v76 = v76 + (96 - (51 + (247 - (166 + 37))));
										v84 = v72[v76];
										v82[v84[2]] = v84[1 + 2];
										v76 = v76 + (1882 - (22 + 1859));
										v84 = v72[v76];
										v82[v84[(3091 - (843 + 929)) - (1114 + 203)]] = v84[3];
										v76 = v76 + (727 - (228 + 498));
										v84 = v72[v76];
										v144 = v84[1 + 1];
										v82[v144] = v82[v144](v13(v82, v144 + 1 + 0, v84[3]));
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[(927 - (30 + 232)) - ((496 - 322) + 489)]][v84[3]] = v82[v84[4]];
										v76 = v76 + (2 - (778 - (55 + 722)));
										v84 = v72[v76];
										v82[v84[2]] = v82[v84[1908 - (830 + (2307 - 1232))]];
										v76 = v76 + (525 - (303 + 221));
										v84 = v72[v76];
										v82[v84[1271 - (231 + 1038)]] = v84[3 + 0];
										v76 = v76 + (1163 - (171 + 991));
										v84 = v72[v76];
										v82[v84[(1683 - (78 + 1597)) - 6]] = v84[7 - 4];
										v76 = v76 + (2 - (1 + 0));
										v84 = v72[v76];
										v144 = v84[2 + 0];
										v82[v144] = v82[v144](v13(v82, v144 + ((3 + 0) - 2), v84[(7 + 1) - 5]));
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v82[v84[6 - (553 - (305 + 244))]][v84[3]] = v82[v84[1252 - (111 + 1137)]];
										v76 = v76 + (159 - (91 + 67));
										v84 = v72[v76];
										v82[v84[2]] = v82[v84[8 - 5]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[1 + 1]] = v84[526 - (423 + 100)];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[1 + 1]] = v84[7 - 4];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v144 = v84[2];
										v82[v144] = v82[v144](v13(v82, v144 + (772 - (326 + 445)), v84[13 - 10]));
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v82[v84[4 - 2]][v84[714 - (530 + 181)]] = v82[v84[885 - (614 + 267)]];
									end
								elseif (v85 <= (42 - (19 + 13))) then
									if (v85 <= (12 - 4)) then
										if (v85 > ((15 + 1) - 9)) then
											local v245 = 105 - (95 + 10);
											local v246;
											while true do
												if ((4377 >= 309) and (v245 == (0 - 0))) then
													v246 = v84[1 + 1];
													v82[v246](v13(v82, v246 + 1, v77));
													break;
												end
											end
										else
											local v247 = 0 - 0;
											local v248;
											local v249;
											local v250;
											local v251;
											while true do
												if (v247 == (12 - 6)) then
													v76 = v76 + (1813 - (916 + 377 + 519));
													v84 = v72[v76];
													v82[v84[3 - 1]] = v61[v84[3]];
													v76 = v76 + (2 - 1);
													v84 = v72[v76];
													v82[v84[3 - 1]] = v61[v84[12 - 9]];
													v247 = 16 - 9;
												end
												if ((367 < 2905) and (v247 == (3 + 1))) then
													v82[v84[1 + 1]] = v82[v84[6 - 3]] + v84[1 + (9 - 6)];
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v251 = v84[2 + 0];
													v249, v250 = v75(v82[v251](v13(v82, v251 + (1097 - (709 + 387)), v84[1861 - (673 + (1621 - 436))])));
													v77 = (v250 + v251) - 1;
													v247 = 5;
												end
												if ((3414 > 2251) and (5 == v247)) then
													v248 = 0 - 0;
													for v1195 = v251, v77 do
														local v1196 = 0 - 0;
														while true do
															if ((2820 > 224) and (v1196 == (0 - 0))) then
																v248 = v248 + 1 + 0;
																v82[v1195] = v249[v248];
																break;
															end
														end
													end
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v251 = v84[(764 - (592 + 170)) - 0];
													v82[v251] = v82[v251](v13(v82, v251 + (3 - 2) + 0, v77));
													v247 = 11 - 5;
												end
												if ((v247 == (29 - 14)) or (3759 < 1073)) then
													v249, v250 = v75(v82[v251](v82[v251 + (1881 - ((1119 - 673) + 1434))]));
													v77 = (v250 + v251) - ((599 + 685) - (1040 + 243));
													v248 = 0 - (0 + 0);
													for v1197 = v251, v77 do
														v248 = v248 + (1848 - (559 + 1288));
														v82[v1197] = v249[v248];
													end
													v76 = v76 + (1932 - (609 + 1322));
													v84 = v72[v76];
													v247 = 470 - (13 + 441);
												end
												if ((52 - 38) == v247) then
													v76 = v76 + ((4 - 2) - 1);
													v84 = v72[v76];
													v82[v84[9 - 7]] = v82[v84[1 + 2]] % v84[14 - 10];
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v251 = v84[1 + 1];
													v247 = 15;
												end
												if ((1697 < 2409) and ((20 - 13) == v247)) then
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v82[v84[2]] = v82[v84[4 - 1]];
													v76 = v76 + 1 + 0 + 0;
													v84 = v72[v76];
													v82[v84[2]] = #v82[v84[5 - 2]];
													v247 = 5 + 3;
												end
												if ((v247 == (0 + 0)) or (3877 <= 2723)) then
													v248 = nil;
													v249, v250 = nil;
													v251 = nil;
													v82[v84[2]] = v82[v84[3 + 0]];
													v76 = v76 + 1 + (507 - (353 + 154));
													v84 = v72[v76];
													v247 = (577 - 143) - (153 + 280);
												end
												if (v247 == 1) then
													v82[v84[5 - 3]] = v61[v84[3 + 0]];
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v82[v84[2 + 0]] = v61[v84[3 + 0]];
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v247 = 2 - (0 - 0);
												end
												if (v247 == (7 + 3)) then
													v76 = v76 + (668 - (89 + 578));
													v84 = v72[v76];
													v82[v84[2 + 0]] = v84[5 - 2] + v82[v84[1053 - (572 + 477)]];
													v76 = v76 + 1;
													v84 = v72[v76];
													v82[v84[1 + 1]] = v82[v84[3]] + v84[3 + 1];
													v247 = 2 + 7 + 2;
												end
												if ((3858 >= 1776) and (v247 == (97 - (84 + 2)))) then
													v76 = v76 + ((1 + 0) - 0);
													v84 = v72[v76];
													v251 = v84[2 + 0];
													v249, v250 = v75(v82[v251](v13(v82, v251 + (843 - (497 + 345)), v84[1 + 0 + (2 - 0)])));
													v77 = (v250 + v251) - (1 + 0);
													v248 = 1333 - (605 + 728);
													v247 = 9 + 3;
												end
												if (v247 == (26 - 14)) then
													for v1200 = v251, v77 do
														v248 = v248 + 1;
														v82[v1200] = v249[v248];
													end
													v76 = v76 + (1 - 0) + (0 - 0);
													v84 = v72[v76];
													v251 = v84[7 - 5];
													v249, v250 = v75(v82[v251](v13(v82, v251 + 1 + 0, v77)));
													v77 = (v250 + v251) - 1;
													v247 = 13;
												end
												if (v247 == (7 - 4)) then
													v82[v84[2 + 0]] = v82[v84[492 - (457 + 32)]];
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v82[v84[2]] = v82[v84[1405 - (832 + 570)]];
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v247 = 2 + 2;
												end
												if (v247 == (6 - 4)) then
													v82[v84[1 + 1]] = v61[v84[799 - (588 + 208)]];
													v76 = v76 + (2 - 1);
													v84 = v72[v76];
													v82[v84[1802 - (884 + 916)]] = v61[v84[6 - 3]];
													v76 = v76 + 1;
													v84 = v72[v76];
													v247 = 2 + 1;
												end
												if (v247 == 8) then
													v76 = v76 + (654 - (232 + 421));
													v84 = v72[v76];
													v82[v84[1891 - (1569 + 320)]] = v82[v84[1 + 2]] % v82[v84[1 + 3]];
													v76 = v76 + 1;
													v84 = v72[v76];
													v82[v84[6 - 4]] = v84[608 - (316 + 289)] + v82[v84[10 - 6]];
													v247 = (87 - (7 + 79)) + 4 + 4;
												end
												if ((3370 >= 3257) and (v247 == (1469 - (666 + (968 - (24 + 157)))))) then
													v251 = v84[2];
													v82[v251](v13(v82, v251 + (426 - ((718 - 358) + 65)), v77));
													break;
												end
												if (v247 == ((27 - 14) + 0)) then
													v248 = 254 - (79 + 175);
													for v1203 = v251, v77 do
														v248 = v248 + (1 - 0);
														v82[v1203] = v249[v248];
													end
													v76 = v76 + 1 + 0;
													v84 = v72[v76];
													v251 = v84[5 - 3];
													v82[v251] = v82[v251](v13(v82, v251 + (1 - 0), v77));
													v247 = 913 - (503 + 396);
												end
												if ((2429 > 1167) and (v247 == (190 - (92 + 89)))) then
													v76 = v76 + (1 - (0 + 0));
													v84 = v72[v76];
													v82[v84[2 + 0]] = #v82[v84[2 + 1]];
													v76 = v76 + (3 - 2);
													v84 = v72[v76];
													v82[v84[1 + 1]] = v82[v84[6 - 3]] % v82[v84[4 + 0]];
													v247 = 10;
												end
											end
										end
									elseif ((3932 > 957) and (v85 == (5 + 4))) then
										v76 = v84[3];
									else
										local v253 = 0 - 0;
										local v254;
										local v255;
										local v256;
										while true do
											if ((644 == 644) and ((v253 == 0) or (2493 < 2135))) then
												v254 = v84[1 + 1];
												v255 = v82[v254];
												v253 = 1 - 0;
											end
											if ((4771 == 4771) and ((1245 - (485 + 759)) == v253)) then
												v256 = v82[v254 + 2];
												if ((v256 > (0 - 0)) or (1039 >= 1586)) then
													if ((2474 <= 4531) and (v255 > v82[v254 + 1])) then
														v76 = v84[1192 - (442 + (2011 - 1264))];
													else
														v82[v254 + (1138 - (832 + 303))] = v255;
													end
												elseif (v255 < v82[v254 + (947 - (88 + 858))]) then
													v76 = v84[1 + 2];
												else
													v82[v254 + 3] = v255;
												end
												break;
											end
										end
									end
								elseif (v85 <= (10 + (382 - (262 + 118)))) then
									if ((2432 > 980) and (v85 > (1 + 10))) then
										local v257;
										v82[v84[791 - (766 + 23)]][v84[14 - 11]] = v84[4];
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v82[v84[2]] = v62[v84[7 - 4]];
										v76 = v76 + (3 - 2);
										v84 = v72[v76];
										v82[v84[2]] = v84[1076 - (1036 + 37)];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v257 = v84[3 - 1];
										v82[v257](v82[v257 + 1 + 0]);
										v76 = v76 + (1481 - (641 + 839));
										v84 = v72[v76];
										v82[v84[915 - (910 + 3)]] = v84[3];
										v76 = v76 + 1;
										v84 = v72[v76];
										v76 = v84[3];
									else
										v82[v84[4 - (1085 - (1038 + 45))]] = v82[v84[1687 - (1466 + 218)]] % v82[v84[2 + 2]];
									end
								elseif ((1164 > 1095) and (1069 == 1069) and (v85 == 13)) then
									v82[v84[1150 - (556 + 592)]] = {};
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[2]] = v62[v84[3]];
									v76 = v76 + (809 - (329 + 479));
									v84 = v72[v76];
									v82[v84[856 - ((376 - 202) + 680)]] = v82[v84[3]][v84[13 - 9]];
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[2]] = v62[v84[3]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[741 - (396 + 343)]] = v82[v84[1 + 2]][v84[1481 - (29 + 1448)]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[1391 - (135 + 1254)]] = v62[v84[11 - 8]];
									v76 = v76 + (4 - 3);
									v84 = v72[v76];
									v82[v84[2 + 0]] = v82[v84[1530 - (389 + 1138)]][v84[4]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[576 - (102 + 472)]] = v62[v84[3]];
									v76 = v76 + 1;
									v84 = v72[v76];
									if not v82[v84[2 + 0]] then
										v76 = v76 + 1;
									else
										v76 = v84[2 + 1];
									end
								else
									local v281;
									v82[v84[2]] = v82[v84[233 - (19 + 211)]][v84[4 + 0]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[1547 - (320 + 1225)]][v82[v84[5 - 2]]] = v82[v84[3 + 1]];
									v76 = v76 + (1465 - (157 + 1307));
									v84 = v72[v76];
									v281 = v84[(1974 - (88 + 25)) - (821 + 1038)];
									v82[v281] = v82[v281](v13(v82, v281 + 1, v84[3]));
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[4 - 2]] = v82[v84[1 + 2]];
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[1 + 1]] = v84[3];
								end
							elseif (v85 <= 22) then
								if (v85 <= 18) then
									if ((v85 <= (39 - 23)) or (511 == 4655)) then
										if ((3479 >= 2378) and (v85 == (1041 - (834 + 192)))) then
											do
												return;
											end
										elseif ((2069 <= 4346) and ((v84[1 + (2 - 1)] == v82[v84[2 + 2]]) or (4793 < 2333))) then
											v76 = v76 + 1 + 0;
										else
											v76 = v84[4 - 1];
										end
									elseif (v85 > 17) then
										local v293;
										local v294;
										v294 = v84[2];
										v293 = v82[v84[307 - (300 + 2 + 2)]];
										v82[v294 + 1 + 0] = v293;
										v82[v294] = v293[v84[4]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[5 - 3]] = v61[v84[(341 + 24) - (112 + 250)]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[4 - 2]] = v82[v84[2 + 1]][v84[3 + 1]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v294 = v84[2 + 0];
										v82[v294] = v82[v294](v13(v82, v294 + 1 + 0, v84[3 + 0]));
										v76 = v76 + 1;
										v84 = v72[v76];
										v294 = v84[1416 - (1001 + 413)];
										v293 = v82[v84[6 - 3]];
										v82[v294 + (883 - (244 + 638))] = v293;
										v82[v294] = v293[v84[697 - (627 + 66)]];
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v82[v84[2]] = v61[v84[605 - (512 + (1126 - (1007 + 29)))]];
										v76 = v76 + (1907 - (1665 + 241));
										v84 = v72[v76];
										v82[v84[719 - (373 + 344)]] = v82[v84[2 + 1]][v84[2 + 2]];
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v82[v84[2 - 0]] = {};
										v76 = v76 + (1100 - (35 + 1064));
										v84 = v72[v76];
										v82[v84[2 + 0]] = v61[v84[(2 + 4) - 3]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[2]] = v82[v84[1239 - (298 + 938)]][v84[1263 - (233 + 1026)]];
										v76 = v76 + (1667 - (636 + 1030));
										v84 = v72[v76];
										v82[v84[2 + 0]] = v61[v84[3 + 0]];
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v82[v84[1 + 1]] = v82[v84[1 + 2]][v84[(1064 - 839) - (55 + 166)]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[1 + 1 + 0]][v82[v84[3]]] = v82[v84[15 - 11]];
										v76 = v76 + (298 - (36 + 261));
										v84 = v72[v76];
										v82[v84[3 - 1]] = v61[v84[3]];
										v76 = v76 + (1369 - ((845 - (340 + 471)) + 1334));
										v84 = v72[v76];
										v82[v84[1 + 1]] = v82[v84[3]][v84[4]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[1285 - (1035 + (624 - 376))]] = v61[v84[24 - (20 + 1)]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[2]] = v82[v84[2 + 1]][v84[323 - (134 + 185)]];
										v76 = v76 + (1134 - (549 + 584));
										v84 = v72[v76];
										v82[v84[687 - (314 + 371)]][v82[v84[10 - 7]]] = v82[v84[972 - (478 + 490)]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[(1763 - (276 + 313)) - (786 + 386)]] = v61[v84[9 - 6]];
										v76 = v76 + (1380 - (1055 + 324));
										v84 = v72[v76];
										v82[v84[1342 - ((2667 - 1574) + 247)]] = v82[v84[3]][v84[4]];
										v76 = v76 + 1 + 0 + 0;
										v84 = v72[v76];
										v82[v84[2]][v82[v84[1 + 2]]] = v84[15 - 11];
										v76 = v76 + (3 - 2);
										v84 = v72[v76];
										v82[v84[5 - 3]] = v61[v84[7 - 4]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[2]] = v82[v84[11 - 8]][v84[13 - 9]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[4 - 2]][v82[v84[691 - (364 + 138 + 186)]]] = v84[10 - (1 + 5)];
										v76 = v76 + (2 - (1973 - (495 + 1477)));
										v84 = v72[v76];
										v82[v84[1 + 1]] = v61[v84[12 - 9]];
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v82[v84[5 - 3]] = v82[v84[1271 - (1249 + 19)]][v84[4 + 0]];
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v82[v84[7 - 5]] = v61[v84[3]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[1088 - (686 + 400)]] = v82[v84[3 + 0]][v84[233 - (73 + 156)]];
										v76 = v76 + 1 + 0 + 0;
										v84 = v72[v76];
										v82[v84[813 - (721 + 90)]][v82[v84[1 + 2]]] = v82[v84[12 - 8]];
										v76 = v76 + (471 - (224 + 246));
										v84 = v72[v76];
										v294 = v84[2 - 0];
										v82[v294](v13(v82, v294 + (1 - 0), v84[3]));
									elseif (v82[v84[(404 - (342 + 61)) + 1]] == v84[4]) then
										v76 = v76 + 1 + 0 + 0;
									else
										v76 = v84[3 + (165 - (4 + 161))];
									end
								elseif (v85 <= (39 - 19)) then
									if ((v85 == 19) or (124 > 191)) then
										local v348;
										local v349, v350;
										local v351;
										local v352;
										v82[v84[2]] = v62[v84[9 - 6]];
										v76 = v76 + (514 - (203 + 310));
										v84 = v72[v76];
										v352 = v84[1995 - (1238 + 755)];
										v351 = v82[v84[1 + 2]];
										v82[v352 + 1] = v351;
										v82[v352] = v351[v84[1538 - (709 + 825)]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[2 + 0]] = v84[4 - 1];
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v352 = v84[2];
										v349, v350 = v75(v82[v352](v13(v82, v352 + (865 - (196 + 668)), v84[11 - 8])));
										v77 = (v350 + v352) - (1 - 0);
										v348 = 0;
										for v889 = v352, v77 do
											local v890 = 833 - (171 + 662);
											while true do
												if (v890 == (93 - (4 + 89))) then
													v348 = v348 + ((9 - 6) - 2);
													v82[v889] = v349[v348];
													break;
												end
											end
										end
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v352 = v84[8 - 6];
										v82[v352] = v82[v352](v13(v82, v352 + 1 + (0 - 0), v77));
										v76 = v76 + (1487 - (35 + 1451));
										v84 = v72[v76];
										v82[v84[1455 - ((525 - (322 + 175)) + 1425)]]();
										v76 = v76 + (1994 - (941 + 1052));
										v84 = v72[v76];
										v76 = v84[3];
									else
										v82[v84[2]] = v29(v73[v84[3 + 0]], nil, v62);
									end
								elseif ((v85 > (1535 - (822 + 692))) or (663 > 2245)) then
									v82[v84[2]] = v62[v84[(566 - (173 + 390)) - 0]];
								else
									v82[v84[1 + 1]] = v82[v84[300 - (45 + 252)]];
								end
							elseif (v85 <= 26) then
								if (v85 <= (24 + 0)) then
									if ((v85 == (8 + 15)) or (4926 < 1320) or (1608 == 1524)) then
										local v371 = v84[4 - 2];
										local v372, v373 = v75(v82[v371](v82[v371 + (434 - (114 + 319))]));
										v77 = (v373 + v371) - (1 - 0);
										local v374 = 0 - 0;
										for v891 = v371, v77 do
											v374 = v374 + 1;
											v82[v891] = v372[v374];
										end
									else
										v82[v84[2 + 0]] = #v82[v84[4 - 1]];
									end
								elseif (v85 > (52 - 27)) then
									v82[v84[1965 - (556 + 1407)]][v84[1209 - (741 + 465)]] = v82[v84[469 - (42 + 128 + 295)]];
								else
									local v378;
									local v379;
									v82[v84[2 + 0]][v82[v84[(317 - (203 + 111)) + 0]]] = v82[v84[9 - 5]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v379 = v84[2];
									v82[v379](v13(v82, v379 + 1 + 0, v84[2 + 1]));
									v76 = v76 + (1231 - (957 + 273));
									v84 = v72[v76];
									v379 = v84[1 + 1];
									v378 = v82[v84[2 + 1]];
									v82[v379 + (3 - (1 + 1))] = v378;
									v82[v379] = v378[v84[10 - 6]];
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v82[v84[2]] = {};
									v76 = v76 + (4 - 3);
									v84 = v72[v76];
									v82[v84[1782 - (389 + 1391)]] = v82[v84[2 + 0 + 1]][v84[1 + 3]];
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v82[v84[953 - (783 + 168)]] = v82[v84[3]][v84[13 - 9]];
									v76 = v76 + 1 + (0 - 0);
									v84 = v72[v76];
									v82[v84[(283 + 30) - (309 + 2)]][v82[v84[9 - 6]]] = v82[v84[1216 - (1090 + 122)]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[2]] = v82[v84[9 - 6]][v84[3 + 1]];
								end
							elseif (v85 <= (1146 - (628 + (1196 - (57 + 649))))) then
								if (v85 > (5 + 22)) then
									local v397;
									v82[v84[(388 - (328 + 56)) - 2]][v84[13 - 10]] = v84[778 - (431 + 343)];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[3 - 1]] = v62[v84[3]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[(2 + 3) - 3]] = v84[3];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v397 = v84[2];
									v82[v397](v82[v397 + 1 + 0]);
									v76 = v76 + (1696 - (556 + 1139));
									v84 = v72[v76];
									v82[v84[17 - (6 + 9)]] = v84[(513 - (433 + 79)) + 2];
								else
									local v408 = 0;
									while true do
										if (v408 == (2 + 1)) then
											if ((581 <= 2774) and (1769 == 1769) and (v82[v84[2]] ~= v82[v84[4]])) then
												v76 = v76 + (170 - (28 + 141));
											else
												v76 = v84[2 + 1];
											end
											break;
										end
										if ((3575 > 1313) and ((1 - 0) == v408)) then
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v82[v84[1319 - (486 + 831)]] = v62[v84[7 - (1 + 3)]];
											v76 = v76 + ((3 + 0) - 2);
											v408 = 1 + 1;
										end
										if ((v408 == (6 - 4)) or (1840 <= 1445)) then
											v84 = v72[v76];
											v82[v84[6 - 4]] = v82[v84[(5986 - 4720) - (668 + 595)]][v84[4 + 0]];
											v76 = v76 + 1;
											v84 = v72[v76];
											v408 = 1 + 0 + 2 + 0;
										end
										if (v408 == (0 - 0)) then
											v82[v84[292 - (23 + (1303 - (562 + 474)))]] = v62[v84[1947 - (1129 + 815)]];
											v76 = v76 + (388 - (371 + 16));
											v84 = v72[v76];
											v82[v84[1752 - (1326 + 424)]] = v82[v84[3]][v84[4]];
											v408 = 1 - 0;
										end
									end
								end
							elseif (v85 > (105 - 76)) then
								local v409;
								v409 = v84[120 - (88 + 30)];
								v82[v409] = v82[v409](v13(v82, v409 + (772 - (720 + 51)), v84[6 - 3]));
								v76 = v76 + (1777 - (421 + 1355));
								v84 = v72[v76];
								v82[v84[2]][v84[4 - 1]] = v82[v84[2 + 2]];
								v76 = v76 + (1084 - (286 + 797));
								v84 = v72[v76];
								v82[v84[7 - 5]] = v82[v84[3]];
								v76 = v76 + (1 - 0);
								v84 = v72[v76];
								v82[v84[441 - ((926 - 529) + (85 - 43))]] = v84[1 + 2];
								v76 = v76 + (801 - (24 + 776));
								v84 = v72[v76];
								v82[v84[2 - (905 - (76 + 829))]] = v84[1676 - (1506 + 167)];
								v76 = v76 + (786 - ((416 - 194) + 563));
								v84 = v72[v76];
								v409 = v84[3 - 1];
								v82[v409] = v82[v409](v13(v82, v409 + 1 + (266 - (58 + 208)), v84[193 - (23 + 167)]));
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[1800 - (690 + 1108)]][v84[2 + 1]] = v82[v84[4]];
								v76 = v76 + 1 + 0 + 0;
								v84 = v72[v76];
								v82[v84[2]] = v82[v84[851 - (40 + 808)]];
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[1 + 1]] = v84[3];
								v76 = v76 + 1 + 0;
								v84 = v72[v76];
								v82[v84[7 - 5]] = v84[2 + 1 + 0];
								v76 = v76 + 1 + 0;
								v84 = v72[v76];
								v409 = v84[2 + 0];
								v82[v409] = v82[v409](v13(v82, v409 + (572 - (47 + 524)), v84[(7 - 5) + 1]));
								v76 = v76 + (2 - 1);
								v84 = v72[v76];
								v82[v84[2 - 0]][v84[6 - 3]] = v82[v84[1730 - (1165 + 561)]];
								v76 = v76 + 1 + (337 - (258 + 79));
								v84 = v72[v76];
								v82[v84[6 - 4]] = v82[v84[2 + 1]];
								v76 = v76 + (480 - (341 + 138));
								v84 = v72[v76];
								v82[v84[1 + 1 + 0]] = v84[5 - 2];
								v76 = v76 + (327 - (89 + (498 - 261)));
								v84 = v72[v76];
								v82[v84[1472 - (1219 + 251)]] = v84[3];
								v76 = v76 + (3 - 2);
								v84 = v72[v76];
								v409 = v84[3 - (1672 - (1231 + 440))];
								v82[v409] = v82[v409](v13(v82, v409 + (882 - (581 + (358 - (34 + 24)))), v84[1223 - (855 + 365)]));
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[4 - 2]][v84[1 + 2 + 0]] = v82[v84[1239 - (1030 + 205)]];
								v76 = v76 + 1 + 0;
								v84 = v72[v76];
								v82[v84[2 + (0 - 0)]] = v82[v84[3]];
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[288 - (69 + 87 + 130)]] = v84[6 - 3];
								v76 = v76 + (1 - 0);
								v84 = v72[v76];
								v82[v84[3 - (2 - 1)]] = v84[1 + 2];
								v76 = v76 + 1;
								v84 = v72[v76];
								v409 = v84[2 + 0];
								v82[v409] = v82[v409](v13(v82, v409 + (70 - (10 + 59)), v84[1 + 2]));
								v76 = v76 + (4 - 3);
								v84 = v72[v76];
								v82[v84[1165 - (671 + 492)]][v84[3 + (0 - 0)]] = v82[v84[1219 - (369 + 846)]];
								v76 = v76 + 1 + 0;
								v84 = v72[v76];
								v82[v84[2]] = v82[v84[(7 - 4) + 0]];
								v76 = v76 + (1946 - (1036 + 909));
								v84 = v72[v76];
								v82[v84[2 + 0]] = v84[4 - 1];
								v76 = v76 + (204 - (11 + 192));
								v84 = v72[v76];
								v82[v84[2 + 0]] = v84[178 - (135 + 40)];
								v76 = v76 + (2 - 1);
								v84 = v72[v76];
								v409 = v84[2 + 0];
								v82[v409] = v82[v409](v13(v82, v409 + 1, v84[3]));
								v76 = v76 + (2 - 1);
								v84 = v72[v76];
								v82[v84[2]][v84[4 - 1]] = v82[v84[180 - (50 + 126)]];
								v76 = v76 + (2 - 1);
								v84 = v72[v76];
								v82[v84[1 + 1]] = v82[v84[1416 - (1233 + 180)]];
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[971 - (522 + 447)]] = v84[1424 - (107 + 1314)];
								v76 = v76 + 1 + 0;
								v84 = v72[v76];
								v82[v84[5 - 3]] = v84[3];
								v76 = v76 + 1 + 0;
								v84 = v72[v76];
								v409 = v84[2];
								v82[v409] = v82[v409](v13(v82, v409 + (1 - 0), v84[11 - 8]));
								v76 = v76 + (1911 - (716 + 1194));
								v84 = v72[v76];
								v82[v84[1 + (3 - 2)]][v84[1 + 2]] = v82[v84[4]];
								v76 = v76 + (504 - (74 + 429));
								v84 = v72[v76];
								v82[v84[(6 - 3) - 1]] = v82[v84[2 + 1]];
								v76 = v76 + (2 - 1);
								v84 = v72[v76];
								v82[v84[(1591 - (877 + 712)) + 0]] = v84[8 - 5];
								v76 = v76 + (2 - 1);
								v84 = v72[v76];
								v82[v84[(261 + 174) - (279 + 154)]] = v84[781 - (454 + 324)];
								v76 = v76 + 1 + 0;
								v84 = v72[v76];
								v409 = v84[19 - (12 + 5)];
								v82[v409] = v82[v409](v13(v82, v409 + 1 + 0, v84[757 - (242 + 512)]));
								v76 = v76 + (2 - 1);
								v84 = v72[v76];
								v82[v84[1 + 1]][v84[3]] = v82[v84[1097 - (277 + 816)]];
								v76 = v76 + (4 - 3);
								v84 = v72[v76];
								v82[v84[2]] = v82[v84[(2478 - 1292) - (1058 + 125)]];
								v76 = v76 + 1 + 0;
								v84 = v72[v76];
								v82[v84[977 - (815 + 160)]] = v84[12 - 9];
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[4 - 2]] = v84[(628 - (92 + 535)) + 2 + 0];
								v76 = v76 + 1;
								v84 = v72[v76];
								v409 = v84[5 - 3];
								v82[v409] = v82[v409](v13(v82, v409 + ((3911 - 2012) - (3 + 38 + 1857)), v84[10 - 7]));
								v76 = v76 + (1894 - (1199 + 23 + 671));
								v84 = v72[v76];
								v82[v84[2]][v84[3]] = v82[v84[4]];
								v76 = v76 + (2 - 1);
								v84 = v72[v76];
								v82[v84[2 + 0]] = v82[v84[3]];
								v76 = v76 + (1 - 0);
								v84 = v72[v76];
								v82[v84[1184 - (229 + 953)]] = v84[3];
								v76 = v76 + (1775 - (1111 + 663));
								v84 = v72[v76];
								v82[v84[2]] = v84[1582 - (874 + 99 + 606)];
								v76 = v76 + 1 + 0;
								v84 = v72[v76];
								v409 = v84[2];
								v82[v409] = v82[v409](v13(v82, v409 + 1 + 0, v84[6 - 3]));
								v76 = v76 + 1 + 0;
								v84 = v72[v76];
								v82[v84[681 - (642 + 37)]][v84[(1 - 0) + 2]] = v82[v84[(1 - 0) + 3]];
								v76 = v76 + ((1787 - (1476 + 309)) - 1);
								v84 = v72[v76];
								v82[v84[456 - (233 + 221)]] = v82[v84[3]];
								v76 = v76 + (2 - 1);
								v84 = v72[v76];
								v82[v84[1286 - (299 + 985)]] = v84[3];
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[2 + 0]] = v84[1544 - (718 + 823)];
								v76 = v76 + 1 + 0 + 0;
								v84 = v72[v76];
								v409 = v84[2];
								v82[v409] = v82[v409](v13(v82, v409 + 1, v84[808 - (266 + (1766 - 1227))]));
								v76 = v76 + (2 - 1);
								v84 = v72[v76];
								v82[v84[2]][v84[1228 - (636 + 589)]] = v82[v84[9 - 5]];
								v76 = v76 + (1 - 0);
								v84 = v72[v76];
								v82[v84[2 + 0]] = v82[v84[2 + 1]];
								v76 = v76 + (1016 - (657 + 358));
								v84 = v72[v76];
								v82[v84[4 - 2]] = v84[(99 - (86 + 7)) - (12 - 9)];
								v76 = v76 + (1188 - (1151 + 36));
								v84 = v72[v76];
								v82[v84[1 + 1 + 0]] = v84[1 + 2];
								v76 = v76 + (2 - 1);
								v84 = v72[v76];
								v409 = v84[1834 - (1552 + 280)];
								v82[v409] = v82[v409](v13(v82, v409 + (835 - (64 + 770)), v84[3]));
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[2 + 0]][v84[6 - 3]] = v82[v84[1 + 3]];
								v76 = v76 + (1244 - (157 + 1086));
								v84 = v72[v76];
								v82[v84[3 - 1]] = v82[v84[13 - 10]];
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[2]] = v84[3];
								v76 = v76 + (1 - 0);
								v84 = v72[v76];
								v82[v84[2 - 0]] = v84[822 - (599 + 220)];
								v76 = v76 + (1 - 0);
								v84 = v72[v76];
								v409 = v84[2];
								v82[v409] = v82[v409](v13(v82, v409 + (1932 - (1813 + (998 - (672 + 208)))), v84[3 + 0]));
								v76 = v76 + (1218 - (841 + 162 + 214));
								v84 = v72[v76];
								v82[v84[2 - 0]][v84[1 + 2]] = v82[v84[10 - 6]];
								v76 = v76 + (860 - (464 + 395));
								v84 = v72[v76];
								v82[v84[5 - (135 - (14 + 118))]] = v84[3];
								v76 = v76 + 1 + 0;
								v84 = v72[v76];
								for v894 = v84[(1284 - (339 + 106)) - (467 + 370)], v84[5 - 2] do
									v82[v894] = nil;
								end
							else
								v82[v84[2 + 0 + 0]] = {};
							end
						elseif (v85 <= (157 - 111)) then
							if (v85 <= 38) then
								if ((v85 <= 34) or (3252 <= 538)) then
									if ((v85 <= (5 + 27)) or (1291 > 3029)) then
										if ((4581 >= 1179) and ((v85 > 31) or (946 == 2209))) then
											local v493;
											local v494, v495;
											local v496;
											local v497;
											v82[v84[4 - 2]] = v62[v84[523 - (150 + 370)]];
											v76 = v76 + (1283 - (74 + 1208));
											v84 = v72[v76];
											v82[v84[2]] = v62[v84[7 - 4]];
											v76 = v76 + ((3 + 1) - 3);
											v84 = v72[v76];
											v497 = v84[(1397 - (440 + 955)) + 0];
											v496 = v82[v84[3 + 0]];
											v82[v497 + (391 - (14 + 376))] = v496;
											v82[v497] = v496[v84[6 - 2]];
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v82[v84[2 + 0]] = v84[3 + 0];
											v76 = v76 + 1;
											v84 = v72[v76];
											v497 = v84[5 - 3];
											v494, v495 = v75(v82[v497](v13(v82, v497 + 1 + 0, v84[81 - (23 + 55)])));
											v77 = (v495 + v497) - 1;
											v493 = 0 - (0 - 0);
											for v896 = v497, v77 do
												v493 = v493 + 1 + 0;
												v82[v896] = v494[v493];
											end
											v76 = v76 + 1;
											v84 = v72[v76];
											v497 = v84[2 + 0];
											v82[v497] = v82[v497](v13(v82, v497 + (1 - 0), v77));
											v76 = v76 + 1 + 0;
											v84 = v72[v76];
											v497 = v84[2];
											v82[v497] = v82[v497]();
											v76 = v76 + (902 - (652 + 249));
											v84 = v72[v76];
											v82[v84[5 - 3]] = v82[v84[1871 - (708 + 1160)]];
											v76 = v76 + 1;
											v84 = v72[v76];
											v497 = v84[5 - 3];
											v496 = v82[v84[5 - 2]];
											v82[v497 + (28 - (4 + 6 + 17))] = v496;
											v82[v497] = v496[v84[1 + 3]];
											v76 = v76 + (1733 - (1400 + 332));
											v84 = v72[v76];
											v82[v84[4 - 2]] = {};
										else
											v82[v84[3 - 1]] = v82[v84[1911 - (242 + 1666)]] + v84[2 + 2];
										end
									elseif ((v85 == (13 + 20)) or (4804 == 790)) then
										v82[v84[2 + 0]][v84[3 + 0]] = v84[944 - (850 + 90)];
									else
										local v521 = 0 - 0;
										local v522;
										local v523;
										while true do
											if ((v521 == (1391 - (360 + 1030))) or (283 >= 2410)) then
												v82[v522 + 1 + 0] = v523;
												v82[v522] = v523[v84[11 - 7]];
												break;
											end
											if ((2530 >= 1955) and (v521 == ((353 - (260 + 93)) - 0))) then
												v522 = v84[2];
												v523 = v82[v84[3]];
												v521 = 1662 - (909 + 752);
											end
										end
									end
								elseif ((1932 == 1932) and (v85 <= (1259 - (103 + 6 + 1114)))) then
									if ((889 <= 2417) and ((v85 > (64 - 29)) or (866 > 4384))) then
										local v524;
										local v525;
										v82[v84[1 + 1]][v82[v84[245 - (6 + 236)]]] = v82[v84[3 + 1]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v525 = v84[4 - 2];
										v82[v525](v13(v82, v525 + (2 - (1 - 0)), v84[4 - 1]));
										v76 = v76 + 1;
										v84 = v72[v76];
										v525 = v84[2];
										v524 = v82[v84[1136 - (1076 + (2031 - (1181 + 793)))]];
										v82[v525 + 1 + 0] = v524;
										v82[v525] = v524[v84[693 - (148 + 431 + 110)]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[1 + 1]] = {};
										v76 = v76 + 1 + (307 - (105 + 202));
										v84 = v72[v76];
										v82[v84[2 + 0]] = v82[v84[(329 + 81) - (174 + (1043 - (352 + 458)))]][v84[11 - 7]];
										v76 = v76 + ((3 - 2) - 0);
										v84 = v72[v76];
										v82[v84[1 + 1]] = v82[v84[1177 - (663 + 511)]][v84[4 + 0]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[5 - 3]][v82[v84[2 + 1]]] = v82[v84[9 - 5]];
										v76 = v76 + ((4 - 2) - 1);
										v84 = v72[v76];
										v82[v84[1 + 1 + 0]] = v82[v84[3]][v84[(20 - 13) - 3]];
									else
										local v543 = v84[2 + 0];
										local v544, v545 = v75(v82[v543](v13(v82, v543 + 1 + 0, v84[3])));
										v77 = (v545 + v543) - (723 - (478 + 244));
										local v546 = 0;
										for v899 = v543, v77 do
											v546 = v546 + (518 - (440 + 77));
											v82[v899] = v544[v546];
										end
									end
								elseif ((v85 == 37) or (2992 <= 1370)) then
									local v547;
									local v548, v549;
									local v550;
									local v551;
									v82[v84[1 + 1]] = v62[v84[10 - 7]];
									v76 = v76 + (1557 - ((1604 - (438 + 511)) + (2284 - (1262 + 121))));
									v84 = v72[v76];
									v551 = v84[1 + 1];
									v550 = v82[v84[3 + 0]];
									v82[v551 + 1] = v550;
									v82[v551] = v550[v84[3 + 1]];
									v76 = v76 + (3 - 2);
									v84 = v72[v76];
									v82[v84[1447 - (695 + 750)]] = v84[(1077 - (728 + 340)) - (1796 - (816 + 974))];
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v551 = v84[7 - 5];
									v548, v549 = v75(v82[v551](v13(v82, v551 + ((1078 - 726) - (285 + 66)), v84[(21 - 15) - 3])));
									v77 = (v549 + v551) - (1311 - (682 + 628));
									v547 = 0 + (339 - (163 + 176));
									for v902 = v551, v77 do
										local v903 = 299 - (176 + 123);
										while true do
											if ((v903 == (0 + 0)) or (1496 > 2249)) then
												v547 = v547 + 1 + 0;
												v82[v902] = v548[v547];
												break;
											end
										end
									end
									v76 = v76 + (270 - (239 + 30));
									v84 = v72[v76];
									v551 = v84[(2 - 1) + 1];
									v82[v551] = v82[v551](v13(v82, v551 + 1 + 0, v77));
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[5 - 3]]();
									v76 = v76 + (316 - ((1406 - 1100) + 9));
									v84 = v72[v76];
									v82[v84[2]] = v84[10 - 7];
									v76 = v76 + 1 + 0 + 0;
									v84 = v72[v76];
									v76 = v84[2 + 1];
								else
									v82[v84[(1811 - (1564 + 246)) + 1]] = v84[8 - 5];
								end
							elseif (((4817 == 4817) and (v85 <= (1417 - (1140 + 235)))) or (2981 <= 333)) then
								if (v85 <= (26 + 14)) then
									if (v85 > 39) then
										local v569 = v84[2 + 0];
										local v570, v571 = v75(v82[v569](v13(v82, v569 + 1 + 0, v77)));
										v77 = (v571 + v569) - 1;
										local v572 = 52 - (33 + 19);
										for v904 = v569, v77 do
											local v905 = 0;
											while true do
												if (v905 == (0 + 0)) then
													v572 = v572 + (2 - 1);
													v82[v904] = v570[v572];
													break;
												end
											end
										end
									else
										v82[v84[1 + 1]] = {};
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v82[v84[2]] = v82[v84[3 + (345 - (124 + 221))]][v84[693 - (586 + 103)]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[1 + 0 + 1]] = v82[v84[(460 - (115 + 336)) - 6]][v84[1492 - ((2882 - 1573) + 179)]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[2 - 0]][v82[v84[1 + 1 + 1]]] = v82[v84[10 - 6]];
										v76 = v76 + (47 - (45 + 1)) + 0 + 0;
										v84 = v72[v76];
										v82[v84[3 - 1]] = v82[v84[5 - (1992 - (1282 + 708))]][v84[613 - (295 + 314)]];
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v82[v84[(3176 - (583 + 629)) - (1300 + 662)]] = v82[v84[9 - (1 + 5)]][v84[1759 - (1178 + 577)]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[2 + (0 - 0)]][v82[v84[8 - 5]]] = v82[v84[1409 - (851 + 554)]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[5 - 3]] = v82[v84[6 - 3]][v84[306 - (61 + 54 + 187)]];
										v76 = v76 + 1 + (1170 - (943 + 227));
										v84 = v72[v76];
										v82[v84[2]][v82[v84[3 + 0]]] = v84[15 - 11];
										v76 = v76 + (1162 - (160 + 1001));
										v84 = v72[v76];
										v82[v84[1 + 1 + 0]] = v82[v84[3 + 0]][v84[7 - 3]];
									end
								elseif ((364 <= 4940) and (v85 == (399 - (237 + 121)))) then
									local v593;
									v82[v84[2]] = v84[900 - (525 + (2003 - (1539 + 92)))];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[2]] = v84[4 - 1];
									v76 = v76 + (3 - 2);
									v84 = v72[v76];
									v593 = v84[144 - (96 + 46)];
									v82[v593] = v82[v593](v13(v82, v593 + (778 - (643 + 134)), v84[2 + 1]));
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v82[v84[7 - (1951 - (706 + 1240))]][v84[3 + 0]] = v82[v84[7 - 3]];
									v76 = v76 + ((259 - (81 + 177)) - 0);
									v84 = v72[v76];
									v82[v84[721 - (316 + (1138 - 735))]] = v82[v84[(259 - (212 + 45)) + 1]];
									v76 = v76 + (2 - (3 - 2));
									v84 = v72[v76];
									v82[v84[2]] = v84[2 + 1];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[4 - 2]] = v84[3 + 0];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v593 = v84[6 - 4];
									v82[v593] = v82[v593](v13(v82, v593 + 1, v84[14 - 11]));
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[3 - 1]][v84[1 + 2]] = v82[v84[4]];
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[2]] = v82[v84[1 + 2]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[5 - 3]] = v84[20 - (12 + 5)];
									v76 = v76 + (3 - 2);
									v84 = v72[v76];
									v82[v84[3 - 1]] = v84[6 - (1949 - (708 + 1238))];
									v76 = v76 + 1;
									v84 = v72[v76];
									v593 = v84[(1 + 3) - 2];
									v82[v593] = v82[v593](v13(v82, v593 + 1 + 0 + 0, v84[3]));
									v76 = v76 + (1974 - ((3323 - (586 + 1081)) + 317));
									v84 = v72[v76];
									v82[v84[2 + 0]][v84[3 + 0]] = v82[v84[10 - 6]];
									v76 = v76 + (4 - 3);
									v84 = v72[v76];
									v82[v84[356 - (5 + 349)]] = v82[v84[14 - 11]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[1273 - (266 + 1005)]] = v84[3];
									v76 = v76 + (512 - (348 + 163)) + 0;
									v84 = v72[v76];
									v82[v84[2]] = v84[3];
									v76 = v76 + (3 - 2);
									v84 = v72[v76];
									v593 = v84[2 - 0];
									v82[v593] = v82[v593](v13(v82, v593 + 1, v84[1699 - (561 + 1135)]));
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[6 - 4]][v84[(961 + 108) - (507 + 559)]] = v82[v84[9 - 5]];
									v76 = v76 + (3 - 2);
									v84 = v72[v76];
									v82[v84[390 - (212 + 176)]] = v82[v84[908 - (250 + 655)]];
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v82[v84[2]] = v84[5 - 2];
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[1958 - (1869 + 87)]] = v84[3];
									v76 = v76 + 1;
									v84 = v72[v76];
									v593 = v84[6 - 4];
									v82[v593] = v82[v593](v13(v82, v593 + (1902 - (484 + 1417)), v84[6 - 3]));
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[(1055 - (215 + 65)) - (48 + 725)]][v84[4 - 1]] = v82[v84[10 - 6]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[4 - 2]] = v82[v84[1 + 2]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[1 + 1]] = v84[856 - (152 + 701)];
									v76 = v76 + (1312 - (430 + 881));
									v84 = v72[v76];
									v82[v84[2]] = v84[(4 - 2) + 1];
									v76 = v76 + (896 - (557 + 338));
									v84 = v72[v76];
									v593 = v84[1 + (1860 - (1541 + 318))];
									v82[v593] = v82[v593](v13(v82, v593 + 1, v84[3]));
									v76 = v76 + ((2 + 0) - 1);
									v84 = v72[v76];
									v82[v84[2]][v84[3]] = v82[v84[13 - 9]];
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v82[v84[(3 + 1) - 2]] = v82[v84[3]];
									v76 = v76 + (802 - (499 + 228 + 74));
									v84 = v72[v76];
									v82[v84[868 - (39 + 827)]] = v84[7 - 4];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[4 - 2]] = v84[3];
									v76 = v76 + (3 - 2);
									v84 = v72[v76];
									v593 = v84[2];
									v82[v593] = v82[v593](v13(v82, v593 + (1 - 0), v84[1 + 2]));
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v82[v84[1 + 1]][v84[4 - 1]] = v82[v84[108 - (103 + 1)]];
									v76 = v76 + (555 - (475 + 79));
									v84 = v72[v76];
									v82[v84[4 - 2]] = v82[v84[9 - 6]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[2]] = v84[3];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[1505 - (1395 + 108)]] = v84[8 - 5];
									v76 = v76 + (1205 - (7 + 1197));
									v84 = v72[v76];
									v593 = v84[1 + 1];
									v82[v593] = v82[v593](v13(v82, v593 + 1, v84[(1752 - (1036 + 714)) + 1]));
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[2]][v84[322 - (27 + 292)]] = v82[v84[11 - (5 + 2)]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[2 - 0]] = v82[v84[(7 + 5) - 9]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[3 - 1]] = v84[3];
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[1282 - (883 + 397)]] = v84[3];
									v76 = v76 + (140 - (43 + 96));
									v84 = v72[v76];
									v593 = v84[2];
									v82[v593] = v82[v593](v13(v82, v593 + (4 - 3), v84[6 - 3]));
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[1 + 1]][v84[5 - 2]] = v82[v84[2 + 2]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[3 - 1]] = v82[v84[3]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[1 + 1]] = v84[1754 - ((2004 - (563 + 27)) + 337)];
									v76 = v76 + (3 - 2);
									v84 = v72[v76];
									v82[v84[1942 - (1642 + 298)]] = v84[(1993 - (1369 + 617)) - 4];
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v593 = v84[5 - 3];
									v82[v593] = v82[v593](v13(v82, v593 + 1 + 0, v84[3 + 0]));
									v76 = v76 + (973 - (357 + (2102 - (85 + 1402))));
									v84 = v72[v76];
									v82[v84[2 + 0]][v84[6 - (2 + 1)]] = v82[v84[4 + 0]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[4 - 2]] = v82[v84[3 + 0]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[2]] = v84[2 + 1];
									v76 = v76 + (1302 - (384 + 917));
									v84 = v72[v76];
									v82[v84[699 - (128 + 569)]] = v84[1546 - (1407 + (350 - 214))];
									v76 = v76 + (1888 - ((1090 - (274 + 129)) + 1200));
									v84 = v72[v76];
									v593 = v84[1712 - (556 + 1154)];
									v82[v593] = v82[v593](v13(v82, v593 + (3 - 2), v84[(315 - (12 + 205)) - (9 + 86)]));
									v76 = v76 + (422 - (275 + 146));
									v84 = v72[v76];
									v82[v84[1 + 0 + 1]][v84[67 - (29 + 35)]] = v82[v84[17 - 13]];
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v82[v84[8 - 6]] = v82[v84[2 + 1]];
									v76 = v76 + (1013 - (53 + 959));
									v84 = v72[v76];
									v82[v84[(1589 - 1179) - (312 + 93 + 3)]] = v84[3];
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[287 - (147 + (522 - (27 + 357)))]] = v84[902 - (813 + (566 - (91 + 389)))];
									v76 = v76 + (298 - (90 + 207)) + 0 + 0;
									v84 = v72[v76];
									v593 = v84[3 - 1];
									v82[v593] = v82[v593](v13(v82, v593 + ((1354 - (706 + 155)) - (18 + 474)), v84[2 + 1]));
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[(1801 - (730 + 1065)) - 4]][v84[1089 - ((2423 - (1339 + 224)) + 226)]] = v82[v84[307 - (121 + 93 + 89)]];
									v76 = v76 + 1 + 0 + 0;
									v84 = v72[v76];
									v82[v84[1242 - (988 + (374 - 122))]] = v82[v84[1 + 2]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[1972 - (49 + 1921)]] = v84[893 - ((1066 - (268 + 575)) + 667)];
									v76 = v76 + ((1347 - (919 + 375)) - (51 + 1));
									v84 = v72[v76];
									v82[v84[2]] = v84[5 - (5 - 3)];
									v76 = v76 + 1;
									v84 = v72[v76];
									v593 = v84[3 - 1];
									v82[v593] = v82[v593](v13(v82, v593 + (1126 - ((1117 - (180 + 791)) + 979)), v84[(1806 - (323 + 1482)) + (1920 - (1177 + 741))]));
									v76 = v76 + (606 - (21 + 290 + (1102 - 808)));
									v84 = v72[v76];
									v82[v84[5 - 3]][v84[1 + 1 + 1]] = v82[v84[1447 - (496 + 947)]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[1360 - (1233 + 125)]] = v82[v84[2 + 1]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[2]] = v84[3];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[1647 - (963 + 682)]] = v84[3 + (0 - 0)];
									v76 = v76 + (1505 - (43 + 461 + 1000));
									v84 = v72[v76];
									v593 = v84[2 + (109 - (96 + 13))];
									v82[v593] = v82[v593](v13(v82, v593 + 1 + (1921 - (962 + 959)), v84[1 + 2]));
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[2]][v84[3 + 0]] = v82[v84[4]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[184 - (156 + 26)]] = v82[v84[2 + 1]];
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v82[v84[2]] = v84[3];
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[166 - (149 + 15)]] = v84[963 - (890 + 70)];
									v76 = v76 + (118 - (39 + 78));
									v84 = v72[v76];
									v593 = v84[484 - (14 + 468)];
									v82[v593] = v82[v593](v13(v82, v593 + (2 - 1), v84[8 - 5]));
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[2 + 0 + 0]][v84[1 + 2]] = v82[v84[2 + 2]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[2]] = v82[v84[3]];
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[2]] = v84[3 + 0];
									v76 = v76 + (3 - 2);
									v84 = v72[v76];
									v82[v84[1 + (1352 - (461 + 890))]] = v84[3];
									v76 = v76 + 1;
									v84 = v72[v76];
									v593 = v84[2];
									v82[v593] = v82[v593](v13(v82, v593 + (52 - (12 + 39)), v84[3 + 0]));
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v82[v84[2]][v84[10 - 7]] = v82[v84[2 + 2 + 0]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[4 - 2]] = v82[v84[3]];
								else
									local v693 = v84[(7 - 5) + 0];
									do
										return v82[v693](v13(v82, v693 + (4 - 3), v84[1713 - (1596 + (357 - (19 + 224)))]));
									end
								end
							elseif ((2265 > 522) and (v85 <= 44)) then
								if (v85 == (111 - 68)) then
									local v694 = v84[715 - (164 + 549)];
									v82[v694](v82[v694 + (1439 - (1059 + 379))]);
								else
									local v695;
									v82[v84[(2 + 0) - 0]] = v84[2 + 1];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v695 = v84[2];
									v82[v695] = v82[v695](v13(v82, v695 + (393 - (145 + 247)), v84[3 + 0]));
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[1 + 1]][v84[3]] = v82[v84[11 - 7]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[1 + 1]] = v82[v84[3 + 0]];
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[722 - (254 + (664 - (37 + 161)))]] = v84[563 - (197 + 347 + 16)];
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v82[v84[2]] = v84[631 - (294 + 334)];
									v76 = v76 + (254 - (236 + 17));
									v84 = v72[v76];
									v695 = v84[1 + 1];
									v82[v695] = v82[v695](v13(v82, v695 + 1 + 0 + 0, v84[3]));
									v76 = v76 + (3 - 2);
									v84 = v72[v76];
									v82[v84[9 - 7]][v84[2 + 1]] = v82[v84[4 + 0 + 0]];
									v76 = v76 + (795 - (413 + 381));
									v84 = v72[v76];
									v82[v84[1 + (62 - (60 + 1))]] = v82[v84[5 - 2]];
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v82[v84[1972 - (582 + 1388)]] = v84[4 - 1];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[366 - (326 + 38)]] = v84[8 - 5];
									v76 = v76 + (1 - (923 - (826 + 97)));
									v84 = v72[v76];
									v695 = v84[622 - (47 + 573)];
									v82[v695] = v82[v695](v13(v82, v695 + 1 + 0, v84[12 - 9]));
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[2]][v84[4 - 1]] = v82[v84[1668 - (1269 + 395)]];
									v76 = v76 + (493 - (76 + 416));
									v84 = v72[v76];
									v82[v84[445 - (319 + 124)]] = v82[v84[6 - (3 + 0)]];
									v76 = v76 + (1008 - (564 + 443));
									v84 = v72[v76];
									v82[v84[5 - (10 - 7)]] = v84[5 - 2];
									v76 = v76 + (459 - ((1022 - (375 + 310)) + 121));
									v84 = v72[v76];
									v82[v84[5 - 3]] = v84[9 - 6];
									v76 = v76 + ((3911 - (1864 + 135)) - (1261 + 650));
									v84 = v72[v76];
									v695 = v84[1 + 1];
									v82[v695] = v82[v695](v13(v82, v695 + (1 - (0 - 0)), v84[1820 - (772 + 1045)]));
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[2]][v84[1 + 2]] = v82[v84[148 - (23 + 79 + 42)]];
									v76 = v76 + (1845 - (1524 + 320));
									v84 = v72[v76];
									v82[v84[2]] = v82[v84[1273 - (1049 + 221)]];
									v76 = v76 + (157 - (18 + 138));
									v84 = v72[v76];
									v82[v84[4 - 2]] = v84[1105 - (67 + 1035)];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[350 - (136 + (520 - 308))]] = v84[12 - 9];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v695 = v84[(1133 - (314 + 817)) + 0];
									v82[v695] = v82[v695](v13(v82, v695 + 1, v84[1607 - (240 + 1364)]));
									v76 = v76 + (1083 - (1050 + 32));
									v84 = v72[v76];
									v82[v84[7 - 5]][v84[2 + 1]] = v82[v84[4]];
									v76 = v76 + (1056 - (331 + 724));
									v84 = v72[v76];
									v82[v84[1 + 1]] = v82[v84[647 - (269 + 375)]];
									v76 = v76 + (726 - (267 + 458));
									v84 = v72[v76];
									v82[v84[1 + 1]] = v84[5 - 2];
									v76 = v76 + ((465 + 354) - (667 + 151));
									v84 = v72[v76];
									v82[v84[1499 - (1410 + 87)]] = v84[1900 - (1504 + 393)];
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v695 = v84[5 - 3];
									v82[v695] = v82[v695](v13(v82, v695 + (797 - (461 + 335)), v84[1 + 2]));
									v76 = v76 + (1762 - (1730 + 31));
									v84 = v72[v76];
									v82[v84[1669 - (728 + 939)]][v84[10 - 7]] = v82[v84[7 - 3]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[4 - 2]] = v82[v84[1071 - (138 + 930)]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[2]] = v84[3 + 0];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[2]] = v84[12 - 9];
									v76 = v76 + ((1981 - (32 + 182)) - (459 + 966 + 341));
									v84 = v72[v76];
									v695 = v84[1872 - (474 + 1396)];
									v82[v695] = v82[v695](v13(v82, v695 + (1 - 0), v84[3 + 0]));
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[2]][v84[8 - 5]] = v82[v84[4]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[6 - 4]] = v82[v84[(41 - 29) - 9]];
									v76 = v76 + ((657 - (39 + 26)) - (562 + 29));
									v84 = v72[v76];
									v82[v84[2 + 0]] = v84[3];
									v76 = v76 + (1420 - (374 + 1045));
									v84 = v72[v76];
									v82[v84[2]] = v84[3 + 0];
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v695 = v84[640 - (448 + 190)];
									v82[v695] = v82[v695](v13(v82, v695 + 1 + 0, v84[(146 - (54 + 90)) + 1]));
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[2 + 0]][v84[11 - 8]] = v82[v84[12 - 8]];
									v76 = v76 + (1495 - ((1505 - (45 + 153)) + 187));
									v84 = v72[v76];
									v82[v84[(5 + 2) - 5]] = v82[v84[6 - 3]];
									v76 = v76 + (2 - (553 - (457 + 95)));
									v84 = v72[v76];
									v82[v84[685 - (232 + 451)]] = v84[3 + 0];
									v76 = v76 + 1 + 0 + 0;
									v84 = v72[v76];
									v82[v84[2]] = v84[567 - (510 + 54)];
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v695 = v84[38 - (13 + 23)];
									v82[v695] = v82[v695](v13(v82, v695 + (1 - 0), v84[3 - 0]));
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[1090 - (830 + (538 - 280))]][v84[10 - (16 - 9)]] = v82[v84[3 + (3 - 2)]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[1443 - (860 + 581)]] = v82[v84[2 + 1]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[7 - (17 - 12)]] = v84[3 + 0];
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v82[v84[2]] = v84[244 - ((985 - (485 + 263)) + 4)];
									v76 = v76 + 1;
									v84 = v72[v76];
									v695 = v84[4 - 2];
									v82[v695] = v82[v695](v13(v82, v695 + (2 - (708 - (575 + 132))), v84[3]));
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[3 - 1]][v84[3 + 0]] = v82[v84[3 + 1]];
									v76 = v76 + (3 - 2);
									v84 = v72[v76];
									v82[v84[(862 - (750 + 111)) + 1]] = v82[v84[(1012 - (445 + 565)) + 1]];
									v76 = v76 + (1427 - (85 + 1341));
									v84 = v72[v76];
									v82[v84[3 - 1]] = v84[8 - 5];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[374 - (45 + 327)]] = v84[5 - 2];
									v76 = v76 + (503 - (444 + 58));
									v84 = v72[v76];
									v695 = v84[1 + 1];
									v82[v695] = v82[v695](v13(v82, v695 + 1 + 0, v84[2 + 1]));
									v76 = v76 + ((2 + 0) - 1);
									v84 = v72[v76];
									v82[v84[1734 - (64 + 1668)]][v84[1976 - (1227 + 746)]] = v82[v84[12 - 8]];
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[496 - (415 + 79)]] = v82[v84[1 + 2]];
									v76 = v76 + (492 - (21 + 121 + 349));
									v84 = v72[v76];
									v82[v84[1 + 1]] = v84[3 - 0];
									v76 = v76 + (1 - 0) + 0;
									v84 = v72[v76];
									v82[v84[2 + 0]] = v84[3];
									v76 = v76 + ((1 + 1) - 1);
									v84 = v72[v76];
									v695 = v84[1866 - (1710 + 154)];
									v82[v695] = v82[v695](v13(v82, v695 + (319 - (200 + 118)), v84[3]));
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[2 - 0]][v84[4 - 1]] = v82[v84[4 + 0]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[2 + 0]] = v82[v84[2 + (311 - (189 + 121))]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[1 + 1]] = v84[3];
									v76 = v76 + (2 - 1);
									v84 = v72[v76];
									v82[v84[1252 - (363 + 887)]] = v84[5 - 2];
									v76 = v76 + 1;
									v84 = v72[v76];
									v695 = v84[9 - 7];
									v82[v695] = v82[v695](v13(v82, v695 + 1 + 0, v84[6 - (1 + 2)]));
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[1666 - (674 + 990)]][v84[1 + 2]] = v82[v84[2 + 2]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[2 - 0]] = v82[v84[1058 - ((1854 - (634 + 713)) + 548)]];
									v76 = v76 + (838 - (289 + 548));
									v84 = v72[v76];
									v82[v84[1820 - (821 + 997)]] = v84[3];
									v76 = v76 + (256 - (195 + 60));
									v84 = v72[v76];
									v82[v84[(539 - (493 + 45)) + 1]] = v84[3];
									v76 = v76 + (1502 - (251 + 1250));
									v84 = v72[v76];
									v695 = v84[5 - 3];
									v82[v695] = v82[v695](v13(v82, v695 + 1 + 0, v84[1035 - (809 + (1191 - (493 + 475)))]));
									v76 = v76 + (1 - 0);
									v84 = v72[v76];
									v82[v84[5 - 3]][v84[3]] = v82[v84[13 - 9]];
									v76 = v76 + 1 + 0 + (784 - (158 + 626));
									v84 = v72[v76];
									v82[v84[2]] = v82[v84[2 + 1]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[619 - (14 + 603)]] = v84[132 - (118 + 11)];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[2 + 0]] = v84[8 - 5];
									v76 = v76 + (950 - (551 + 398));
									v84 = v72[v76];
									v695 = v84[2 + 0];
									v82[v695] = v82[v695](v13(v82, v695 + 1 + 0, v84[3]));
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[7 - 5]][v84[3]] = v82[v84[9 - 5]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[7 - 5]] = v82[v84[1 + 2]];
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[2]] = v84[3];
									v76 = v76 + (90 - (40 + 49));
									v84 = v72[v76];
									v82[v84[2]] = v84[11 - 8];
									v76 = v76 + (491 - (47 + 52 + 391));
									v84 = v72[v76];
									v695 = v84[2 + 0];
									v82[v695] = v82[v695](v13(v82, v695 + (4 - 3), v84[7 - 4]));
									v76 = v76 + 1;
									v84 = v72[v76];
									v82[v84[2 + (0 - 0)]][v84[(2 + 5) - 4]] = v82[v84[1608 - (1032 + 572)]];
									v76 = v76 + (418 - (203 + 214));
									v84 = v72[v76];
									v82[v84[2]] = v82[v84[1820 - (568 + 1249)]];
									v76 = v76 + 1 + 0;
									v84 = v72[v76];
									v82[v84[2]] = v84[6 - (1 + 2)];
								end
							elseif ((788 < 4081) and (v85 == (173 - 128))) then
								local v801;
								local v802;
								local v803;
								v82[v84[(2399 - (1035 + 56)) - (913 + 393)]] = {};
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[5 - 3]] = v84[3 - 0];
								v76 = v76 + (411 - (269 + 141));
								v84 = v72[v76];
								v82[v84[2]] = #v82[v84[6 - 3]];
								v76 = v76 + (1982 - (362 + 1619));
								v84 = v72[v76];
								v82[v84[(2586 - (114 + 845)) - (950 + 675)]] = v84[2 + 1 + 0];
								v76 = v76 + (1180 - (216 + 963));
								v84 = v72[v76];
								v803 = v84[1289 - (485 + 802)];
								v802 = v82[v803];
								v801 = v82[v803 + (5 - 3)];
								if (v801 > 0) then
									if (v802 > v82[v803 + (560 - (432 + 127))]) then
										v76 = v84[1076 - (1065 + 8)];
									else
										v82[v803 + 2 + 1 + 0] = v802;
									end
								elseif ((2339 > 29) and (v802 < v82[v803 + 1])) then
									v76 = v84[1604 - (635 + 966)];
								else
									v82[v803 + 3 + 0] = v802;
								end
							else
								local v814 = 42 - ((1054 - (179 + 870)) + 37);
								local v815;
								local v816;
								while true do
									if ((4152 >= 1643) and ((2 - 1) == v814)) then
										v84 = v72[v76];
										v82[v84[1 + 1]] = v82[v84[4 - 1]][v84[4]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v816 = v84[2 - 0];
										v82[v816] = v82[v816](v13(v82, v816 + 1 + 0, v84[5 - 2]));
										v76 = v76 + 1;
										v84 = v72[v76];
										v816 = v84[7 - 5];
										v815 = v82[v84[5 - (880 - (827 + 51))]];
										v814 = 4 - 2;
									end
									if ((2810 >= 2165) and (2023 < 3715) and (v814 == (6 + 1))) then
										v76 = v76 + (530 - (318 + 211));
										v84 = v72[v76];
										v82[v84[9 - 7]] = v61[v84[1590 - (963 + 624)]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[(2242 - 1394) - (518 + 328)]] = v82[v84[6 - 3]][v84[4]];
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v82[v84[319 - (301 + 16)]][v82[v84[8 - 5]]] = v84[11 - 7];
										v76 = v76 + (2 - 1);
										v814 = 8;
									end
									if ((4 + 0) == v814) then
										v76 = v76 + 1 + 0 + 0;
										v84 = v72[v76];
										v82[v84[3 - 1]] = v82[v84[2 + 1]][v84[1 + 3]];
										v76 = v76 + (3 - 2);
										v84 = v72[v76];
										v82[v84[2]][v82[v84[1 + 2]]] = v82[v84[1023 - (829 + 190)]];
										v76 = v76 + (3 - (475 - (95 + 378)));
										v84 = v72[v76];
										v82[v84[2 - 0]] = v61[v84[1 + 2]];
										v76 = v76 + (1 - 0);
										v814 = (16 - 4) - 7;
									end
									if ((4693 > 2870) and (2 == v814)) then
										v82[v816 + 1] = v815;
										v82[v816] = v815[v84[1 + 3]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[5 - 3]] = v61[v84[3 + 0 + 0]];
										v76 = v76 + ((1625 - (334 + 677)) - (520 + 93));
										v84 = v72[v76];
										v82[v84[278 - (259 + 17)]] = v82[v84[1 + 2]][v84[2 + 2]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v814 = 10 - (26 - 19);
									end
									if ((357 <= 3812) and (v814 == (1066 - (1049 + 7)))) then
										v82[v84[593 - (396 + 195)]] = v62[v84[3]];
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v82[v84[2]] = v84[1764 - (440 + 1321)];
										v76 = v76 + (1830 - (1059 + 770));
										v84 = v72[v76];
										v816 = v84[9 - 7];
										v82[v816](v82[v816 + (546 - (424 + (528 - 407)))]);
										v76 = v76 + 1;
										v84 = v72[v76];
										v814 = 3 + 8;
									end
									if ((3517 < 3859) and (v814 == (1347 - (641 + 706)))) then
										v815 = nil;
										v816 = nil;
										v816 = v84[1 + 1];
										v815 = v82[v84[3]];
										v82[v816 + (441 - (249 + 191))] = v815;
										v82[v816] = v815[v84[(31 - 14) - 13]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[2]] = v61[v84[3]];
										v76 = v76 + (3 - 2);
										v814 = 428 - (183 + 244);
									end
									if (((1 + 5) == v814) or (2180 == 3317)) then
										v82[v84[732 - (434 + 296)]][v82[v84[9 - 6]]] = v82[v84[4]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[514 - (169 + 343)]] = v61[v84[3]];
										v76 = v76 + 1 + 0 + 0;
										v84 = v72[v76];
										v82[v84[3 - 1]] = v82[v84[8 - 5]][v84[4 + 0]];
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v82[v84[1125 - (651 + 472)]][v82[v84[3 + 0]]] = v84[2 + 2];
										v814 = 8 - 1;
									end
									if (v814 == ((1318 - 826) - (397 + 86))) then
										v82[v84[878 - (423 + 453)]] = v82[v84[1 + 2]][v84[1 + 3]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[(3 - 1) + 0]][v82[v84[3 + 0]]] = v82[v84[1194 - (50 + 1140)]];
										v76 = v76 + 1 + 0 + 0;
										v84 = v72[v76];
										v816 = v84[2 + 0];
										v82[v816](v13(v82, v816 + 1 + (1420 - (1004 + 416)), v84[3 - 0]));
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v814 = 606 - (157 + 439);
									end
									if (v814 == 3) then
										v82[v84[2]] = {};
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[2]] = v61[v84[4 - 1]];
										v76 = v76 + (3 - 2);
										v84 = v72[v76];
										v82[v84[5 - (1960 - (1621 + 336))]] = v82[v84[3]][v84[4]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[920 - (782 + 136)]] = v61[v84[3]];
										v814 = 4;
									end
									if (v814 == 5) then
										v84 = v72[v76];
										v82[v84[2]] = v82[v84[858 - (112 + (2682 - (337 + 1602)))]][v84[1175 - (1026 + 145)]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v82[v84[1 + 1]] = v61[v84[721 - (493 + 225)]];
										v76 = v76 + (3 - (1519 - (1014 + 503)));
										v84 = v72[v76];
										v82[v84[2]] = v82[v84[2 + 1]][v84[10 - 6]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v814 = 1 + 5;
									end
									if ((v814 == (22 - (1029 - (446 + 569)))) or (3098 <= 1172)) then
										v84 = v72[v76];
										v82[v84[1 + 1]] = v61[v84[4 - 1]];
										v76 = v76 + (1596 - (210 + 1385));
										v84 = v72[v76];
										v82[v84[2]] = v82[v84[1692 - (1201 + 488)]][v84[3 + 1]];
										v76 = v76 + (1 - 0);
										v84 = v72[v76];
										v82[v84[(1 + 1) - 0]] = v61[v84[588 - (352 + 233)]];
										v76 = v76 + 1;
										v84 = v72[v76];
										v814 = 21 - 12;
									end
									if ((4216 >= 814) and (v814 == (6 + 5))) then
										v82[v84[5 - 3]] = v84[3];
										v76 = v76 + ((1686 - 1111) - (489 + 85));
										v84 = v72[v76];
										v76 = v84[1504 - (277 + 1224)];
										break;
									end
								end
							end
						elseif (v85 <= 54) then
							if ((1186 == 1186) and (v85 <= 50)) then
								if ((v85 <= (1541 - (663 + 830))) or (3975 == 4556)) then
									if (v85 > 47) then
										local v817 = 0 + 0;
										local v818;
										while true do
											if ((0 - 0) == v817) then
												v818 = v84[877 - (155 + 306 + 414)];
												v82[v818](v13(v82, v818 + 1 + (0 - 0), v84[2 + 1 + 0]));
												break;
											end
										end
									else
										local v819 = v84[1 + 1];
										v82[v819] = v82[v819](v13(v82, v819 + 1, v84[3 + 0]));
									end
								elseif ((v85 > ((804 - (223 + 282)) - (172 + 78))) or (586 == 611)) then
									v82[v84[2 - (0 + 0)]] = v82[v84[3]] % v84[2 + 2];
								else
									local v822 = (0 - 0) - 0;
									local v823;
									while true do
										if (((0 + 0) == v822) or (1822 < 969)) then
											v823 = v84[2];
											v82[v823] = v82[v823]();
											break;
										end
									end
								end
							elseif ((v85 <= (18 + 34)) or (1756 < 1301) or (4778 < 99)) then
								if (v85 == 51) then
									local v824 = 0 - 0;
									local v825;
									while true do
										if ((v824 == (0 - 0)) or (2025 >= 4681)) then
											v825 = v84[2 - 0];
											v82[v825] = v82[v825](v13(v82, v825 + 1 + 0, v77));
											break;
										end
									end
								elseif (v82[v84[2]] == v82[v84[(673 - (623 + 47)) + 1]]) then
									v76 = v76 + (46 - (32 + 13)) + 0;
								else
									v76 = v84[11 - 8];
								end
							elseif (v85 > (123 - (40 + 30))) then
								local v826 = 0 + 0;
								local v827;
								local v828;
								while true do
									if ((2 + 1) == v826) then
										v82[v84[449 - (133 + 255 + 59)]] = {};
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[215 - (199 + 14)]] = v82[v84[10 - 7]][v84[1553 - ((2448 - (1070 + 731)) + 902)]];
										v826 = 4;
									end
									if (v826 == (17 - 11)) then
										v82[v84[2]] = v82[v84[3]][v84[4]];
										v76 = v76 + (234 - (85 + 148));
										v84 = v72[v76];
										v82[v84[1291 - (426 + 863)]][v82[v84[13 - 10]]] = v84[1658 - (873 + 781)];
										v826 = 7;
									end
									if ((3768 == 3768) and (v826 == (1 - 0))) then
										v76 = v76 + (2 - 1);
										v84 = v72[v76];
										v828 = v84[2];
										v827 = v82[v84[2 + 1]];
										v826 = 7 - 5;
									end
									if ((1561 < 2644) and (2198 >= 1225) and (v826 == (0 - 0))) then
										v827 = nil;
										v828 = nil;
										v828 = v84[5 - 3];
										v82[v828](v13(v82, v828 + 1, v84[1950 - (414 + 1533)]));
										v826 = 1 + 0;
									end
									if ((562 - (443 + 112)) == v826) then
										v76 = v76 + (1480 - (849 + 39 + 591));
										v84 = v72[v76];
										v82[v84[5 - 3]] = v82[v84[3]][v84[1 + 3]];
										v76 = v76 + (3 - 2);
										v826 = 8;
									end
									if ((44 <= 3142) and (v826 == ((1406 - (1257 + 147)) + 1 + 1))) then
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v82[v84[1 + 1]] = v82[v84[5 - 2]][v84[4]];
										v76 = v76 + (1 - (0 - 0));
										v826 = (1816 - (98 + 35)) - (136 + 1542);
									end
									if (((3105 == 3105) and (2 == v826)) or (1817 >= 4076)) then
										v82[v828 + ((2 + 1) - 2)] = v827;
										v82[v828] = v827[v84[4]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v826 = 4 - (3 - 2);
									end
									if ((4522 >= 234) and (v826 == (6 + 2))) then
										v84 = v72[v76];
										v82[v84[6 - 4]][v82[v84[489 - (68 + 418)]]] = v84[10 - 6];
										break;
									end
									if ((1719 <= 3213) and (v826 == (5 + 0))) then
										v84 = v72[v76];
										v82[v84[2]][v82[v84[3 + 0]]] = v82[v84[6 - 2]];
										v76 = v76 + 1 + 0;
										v84 = v72[v76];
										v826 = 1098 - (770 + 322);
									end
								end
							else
								v82[v84[1 + 1]] = v84[1 + 2] + v82[v84[1 + 3]];
							end
						elseif (v85 <= 58) then
							if (v85 <= 56) then
								if (v85 == (78 - 23)) then
									if not v82[v84[3 - 1]] then
										v76 = v76 + (2 - 1);
									else
										v76 = v84[10 - 7];
									end
								else
									local v830 = 0;
									local v831;
									local v832;
									local v833;
									while true do
										if (v830 == (1 + 1)) then
											if ((v832 > (0 + (557 - (395 + 162)))) or (3004 <= 2878)) then
												if (v833 <= v82[v831 + (1 - 0)]) then
													local v1238 = 0 + 0;
													while true do
														if (v1238 == (0 + 0)) then
															v76 = v84[2 + 1];
															v82[v831 + 3 + 0] = v833;
															break;
														end
													end
												end
											elseif ((4624 > 1588) and (v833 >= v82[v831 + (3 - 2)])) then
												v76 = v84[3];
												v82[v831 + (3 - 0)] = v833;
											end
											break;
										end
										if (v830 == ((1942 - (816 + 1125)) + (0 - 0))) then
											v833 = v82[v831] + v832;
											v82[v831] = v833;
											v830 = 2;
										end
										if ((0 - 0) == v830) then
											v831 = v84[6 - 4];
											v832 = v82[v831 + 2];
											v830 = 1 + 0;
										end
									end
								end
							elseif ((v85 > (282 - 225)) or (4515 == 4788)) then
								v82[v84[833 - (762 + 69)]] = v61[v84[3]];
							elseif (v82[v84[2]] ~= v82[v84[4]]) then
								v76 = v76 + (3 - 2);
							else
								v76 = v84[3];
							end
						elseif (v85 <= (52 + 8)) then
							if ((v85 > (39 + 20)) or (1101 >= 2067)) then
								local v836 = v84[(1152 - (701 + 447)) - 2];
								do
									return v13(v82, v836, v77);
								end
							else
								v82[v84[2]] = v82[v84[1 + 2]][v84[1 + 3]];
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[7 - 5]][v82[v84[160 - (8 + 149)]]] = v82[v84[1324 - (1199 + (185 - 64))]];
								v76 = v76 + (1 - 0);
								v84 = v72[v76];
								v82[v84[2]] = v82[v84[6 - 3]][v84[2 + 2]];
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[6 - (6 - 2)]][v82[v84[6 - 3]]] = v84[4];
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[2 + 0]] = v82[v84[1810 - (518 + 1289)]][v84[6 - 2]];
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[1 + 1]][v82[v84[3]]] = v82[v84[5 - 1]];
								v76 = v76 + 1 + 0;
								v84 = v72[v76];
								v82[v84[471 - (304 + (1506 - (391 + 950)))]] = v82[v84[3 + 0]][v84[10 - 6]];
								v76 = v76 + (161 - (54 + 106));
								v84 = v72[v76];
								v82[v84[1971 - (1618 + 351)]][v82[v84[(7 - 4) + 0]]] = v84[1020 - (10 + 1006)];
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[1 + 1]] = v82[v84[1 + 2]][v84[12 - 8]];
								v76 = v76 + 1;
								v84 = v72[v76];
								v82[v84[1035 - (912 + 121)]][v82[v84[2 + (2 - 1)]]] = v84[4];
							end
						elseif (v85 > (1350 - (1140 + 105 + 44))) then
							v82[v84[2 + 0]][v82[v84[3 - (0 + 0)]]] = v82[v84[4]];
						else
							local v858 = 0 + 0;
							local v859;
							local v860;
							local v861;
							while true do
								if (v858 == (6 - 4)) then
									for v1216 = 1 - 0, v84[4] do
										local v1217 = 0 + 0;
										local v1218;
										while true do
											if (v1217 == (0 - 0)) then
												v76 = v76 + (187 - (165 + 21));
												v1218 = v72[v76];
												v1217 = 112 - (61 + 50);
											end
											if (((3106 <= 3129) and (v1217 == ((3 - 2) + 0))) or (122 >= 2949)) then
												if ((3995 == 3995) and (v1218[1] == ((1622 - (251 + 1271)) - 79))) then
													v861[v1216 - 1] = {v82,v1218[2 + 1]};
												else
													v861[v1216 - (1461 - (1153 + 142 + 165))] = {v61,v1218[1400 - (819 + 578)]};
												end
												v81[#v81 + (1403 - (331 + 1071))] = v861;
												break;
											end
										end
									end
									v82[v84[745 - ((1574 - 986) + 155)]] = v29(v859, v860, v62);
									break;
								end
								if (v858 == (1282 - (546 + 736))) then
									v859 = v73[v84[1940 - (1834 + 103)]];
									v860 = nil;
									v858 = 1 + 0;
								end
								if (v858 == ((4 - 2) - 1)) then
									v861 = {};
									v860 = v10({}, {__index=function(v1219, v1220)
										local v1221 = v861[v1220];
										return v1221[1767 - (1536 + 230)][v1221[493 - (128 + 363)]];
									end,__newindex=function(v1222, v1223, v1224)
										local v1225 = 0 + 0;
										local v1226;
										while true do
											if (((47 < 1298) and (v1225 == (0 - 0))) or (2388 <= 1882)) then
												v1226 = v861[v1223];
												v1226[1 + 0][v1226[2 - 0]] = v1224;
												break;
											end
										end
									end});
									v858 = 2;
								end
							end
						end
						v76 = v76 + (2 - (1260 - (1147 + 112)));
						break;
					end
				end
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);
